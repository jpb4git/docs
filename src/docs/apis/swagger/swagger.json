{
  "components": {
    "headers": {
      "AiwareVersion": {
        "schema": {
          "description": "This is the aiWARE Version of the controller",
          "type": "string"
        }
      },
      "CorrelationId": {
        "schema": {
          "description": "request CorrelationId header or a new one if not provided in the request",
          "type": "string"
        }
      },
      "RetryAfter": {
        "schema": {
          "description": "If specified, please retry the request no earlier than the time specified in Retry-After",
          "type": "string"
        }
      }
    },
    "parameters": {
      "BuildID": {
        "description": "BuildID of node-red container request",
        "in": "path",
        "name": "BuildID",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "BuildID_Path_Required": {
        "description": "ID of Build",
        "in": "path",
        "name": "BuildID",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "BuildState_Query_Optional": {
        "description": "Filter builds by the build state",
        "in": "query",
        "name": "BuildState",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "ConfigKey": {
        "description": "Config Key",
        "in": "path",
        "name": "ConfigKey",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ConfigSection": {
        "description": "Config Section Entry",
        "in": "path",
        "name": "ConfigSection",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ContainerID": {
        "description": "ContainerID of node-red container",
        "in": "path",
        "name": "ContainerID",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "CoreID": {
        "description": "ID of Core",
        "in": "path",
        "name": "CoreID",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "CorrelationID": {
        "description": "Correlation Id that can be passed, traced in the server and will be returned in the response if present in the request",
        "in": "header",
        "name": "X-Correlation-Id",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "CreatedAfter_Query_Optional": {
        "description": "Filter items where created date is after this date",
        "in": "query",
        "name": "CreatedAfter",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "CreatedBefore_Query_Optional": {
        "description": "Filter items where created date is before this date",
        "in": "query",
        "name": "CreatedBefore",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "EndTime": {
        "description": "The unix timestamp, describing the end time for the stats",
        "explode": true,
        "in": "query",
        "name": "endTime",
        "required": false,
        "schema": {
          "format": "int64",
          "type": "integer"
        },
        "style": "form"
      },
      "EngineCategoryID": {
        "description": "ID of Engine Category",
        "in": "path",
        "name": "EngineCategoryID",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "EngineCategoryID_Query_Optional": {
        "description": "Filter to the particular engine category ID",
        "in": "query",
        "name": "EngineCategoryID",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "EngineID": {
        "description": "EngineID of node-red container request",
        "in": "path",
        "name": "EngineID",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "EngineID_Path_Required": {
        "description": "ID of Engine",
        "in": "path",
        "name": "EngineID",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "EngineInstanceID": {
        "description": "ID of Engine Instance",
        "in": "path",
        "name": "EngineInstanceID",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "EngineName_Query_Optional": {
        "description": "Field to string match against the engine names",
        "in": "query",
        "name": "EngineName",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "EngineOutputType_Query_Optional": {
        "description": "Field to match the current type",
        "in": "query",
        "name": "EngineOutputType",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/EngineTypeEnum"
        }
      },
      "EngineState_Query_Optional": {
        "description": "Field to match the current state",
        "in": "query",
        "name": "EngineState",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/EngineStateEnum"
        }
      },
      "EngineType_Query_Optional": {
        "description": "Field to match the current type",
        "in": "query",
        "name": "EngineType",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/EngineTypeEnum"
        }
      },
      "Engine_IDs_Query_Optional": {
        "description": "Field to provide the input to get engines by Engine ID list. Separated by commas",
        "in": "query",
        "name": "EngineIDs",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "HTTPPushEndpoint_required": {
        "description": "Endpoint UUID to push this chunk towards",
        "in": "path",
        "name": "Endpoint",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "HostID": {
        "description": "ID of Host",
        "in": "path",
        "name": "HostID",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "InternalOrganizationID_Query_Optional": {
        "description": "ID of Organization.  UUID.  This ID is unique to this aiWARE installation.",
        "in": "query",
        "name": "InternalOrganizationID",
        "required": false,
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "JobID": {
        "description": "ID of Job",
        "in": "path",
        "name": "JobID",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "JobOutputName": {
        "description": "Name of the job output, e.g. vtn-standard.json",
        "in": "path",
        "name": "JobOutputName",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "JobStatus": {
        "description": "If specified, this limits the jobs or tasks to follow status",
        "in": "query",
        "name": "status",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/JobStatusEnum"
        }
      },
      "JobTemplateID": {
        "description": "ID of Job",
        "in": "path",
        "name": "TemplateID",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "LaunchAction_Query_Optional": {
        "description": "Field to match the current launch action",
        "in": "query",
        "name": "LaunchAction",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/LaunchActionEnum"
        }
      },
      "LaunchID_Path_Required": {
        "description": "ID of Launch",
        "in": "path",
        "name": "LaunchID",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "LaunchStatus_Query_Optional": {
        "description": "Field to match the current launch status",
        "in": "query",
        "name": "LaunchStatus",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/LaunchStatusEnum"
        }
      },
      "LicenseID": {
        "description": "License ID",
        "in": "path",
        "name": "LicenseID",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "Limit_Query_Optional": {
        "description": "limit page size to this set",
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "OrganizationID": {
        "description": "ID of Organization",
        "in": "path",
        "name": "OrganizationID",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "ServerTypeID_Path_Required": {
        "description": "ID of Server Type",
        "in": "path",
        "name": "ServerTypeID",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "Skip_Query_Optional": {
        "description": "skip this many items",
        "in": "query",
        "name": "skip",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "SortOrder_Query_Optional": {
        "description": "sort order",
        "in": "query",
        "name": "sortorder",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/SortOrderEnum"
        }
      },
      "Sort_Query_Optional": {
        "description": "field to sort on",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "StartTime": {
        "description": "The unix timestamp, describing the start time for the stats",
        "explode": true,
        "in": "query",
        "name": "startTime",
        "required": false,
        "schema": {
          "format": "int64",
          "type": "integer"
        },
        "style": "form"
      },
      "Status": {
        "description": "Automate request status",
        "in": "path",
        "name": "Status",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "StatusFormat": {
        "description": "If specified, this limits the jobs or tasks to follow status",
        "in": "query",
        "name": "format",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/StatusFormatEnum"
        }
      },
      "TaskID": {
        "description": "ID of Task",
        "in": "path",
        "name": "TaskID",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "TaskOutputName": {
        "description": "Name of the task output, e.g. vtn-standard.json",
        "in": "path",
        "name": "TaskOutputName",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "UserID": {
        "description": "ID of User",
        "in": "path",
        "name": "UserID",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "schemas": {
      "AddServersToServerTypeRequest": {
        "properties": {
          "serversToAdd": {
            "description": "The number of servers to add",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AdminConfigResponse": {
        "description": "Response for config request",
        "properties": {
          "result": {
            "description": "Config sections",
            "items": {
              "$ref": "#/components/schemas/ConfigSection"
            },
            "type": "array"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "AdminConfigSectionKeyResponse": {
        "description": "Response for config request",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ConfigKey"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "AdminConfigSectionResponse": {
        "description": "Response for config request",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ConfigSection"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "AdminConfigUpdateRequest": {
        "description": "Request for update config",
        "properties": {
          "sections": {
            "description": "Config sections",
            "items": {
              "$ref": "#/components/schemas/ConfigSection"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AdminConfigUpdateResponse": {
        "description": "Response for config request",
        "properties": {
          "result": {
            "description": "Config sections",
            "items": {
              "$ref": "#/components/schemas/ConfigSection"
            },
            "type": "array"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "AdminConfigUpdateSectionKeyRequest": {
        "description": "Request for update config section for a key",
        "properties": {
          "key": {
            "$ref": "#/components/schemas/ConfigSectionKey"
          }
        },
        "type": "object"
      },
      "AdminConfigUpdateSectionKeyResponse": {
        "description": "Response for config request",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ConfigSectionKey"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "AdminConfigUpdateSectionRequest": {
        "description": "Request for update config",
        "properties": {
          "section": {
            "$ref": "#/components/schemas/ConfigSection"
          }
        },
        "type": "object"
      },
      "AdminConfigUpdateSectionResponse": {
        "description": "Response for config request",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ConfigSection"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "AdminCoreCreateRequest": {
        "description": "This is the request for Create Core",
        "properties": {
          "core": {
            "$ref": "#/components/schemas/CreateCoreDetail"
          }
        },
        "type": "object"
      },
      "AdminCoreCreateResponse": {
        "description": "This is the response for Create Core Request",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/CoreDetail"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "AdminCoreGetDetailResponse": {
        "description": "This is the response for get Core Detail Request",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/CoreDetail"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "AdminHostsGetResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/HostDetail"
            },
            "type": "array"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "AdminOperationRequest": {
        "description": "Request to terminate the cluster",
        "properties": {
          "clusterID": {
            "description": "Cluster ID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdminOperationResponse": {
        "description": "Response from operation",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "AdminOrganizationCreateRequest": {
        "description": "This is the request for Create Organization",
        "properties": {
          "organization": {
            "$ref": "#/components/schemas/CreateOrganizationDetail"
          }
        },
        "type": "object"
      },
      "AdminOrganizationCreateResponse": {
        "description": "This is the response for Create Organization Request",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/OrganizationDetail"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "AdminOrganizationGetDetailResponse": {
        "description": "This is the response for get Organization Detail Request",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/OrganizationDetail"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "AdminOrganizationGetTokensResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/TokenDetail"
            },
            "type": "array"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "AdminOrganizationsGetResponse": {
        "description": "This is the response for get Organization Detail Request",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/OrganizationDetail"
            },
            "type": "array"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "AdminStatusDetail": {
        "description": "Information about the edge cluster",
        "properties": {
          "clusterID": {
            "description": "Cluster ID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdminTokenCreateRequest": {
        "description": "This is the request for Create Token",
        "properties": {
          "token": {
            "$ref": "#/components/schemas/CreateTokenDetail"
          }
        },
        "type": "object"
      },
      "AdminTokenCreateResponse": {
        "description": "This is the response for Create Token Request",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/TokenDetail"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "AdminUserCreateRequest": {
        "description": "This is the request for Create User",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/CreateUserDetail"
          }
        },
        "type": "object"
      },
      "AdminUserCreateResponse": {
        "description": "This is the response for Create User Request",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/UserDetail"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "AdminUserGetDetailResponse": {
        "description": "This is the response for get User Detail Request",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/UserDetail"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "AdminUserGetTokensResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/TokenDetail"
            },
            "type": "array"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "AdminUserLoginRequest": {
        "properties": {
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdminUserLoginResponse": {
        "properties": {
          "result": {
            "$ref": "#/components/schemas/UserDetail"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          },
          "token": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdminUsersGetResponse": {
        "description": "This is the response for get User Detail Request",
        "properties": {
          "count": {
            "description": "Total records for the query",
            "type": "integer"
          },
          "limit": {
            "description": "the number of jobs to return.",
            "type": "integer"
          },
          "offset": {
            "description": "the number of jobs to skip before getting the result set",
            "type": "integer"
          },
          "result": {
            "items": {
              "$ref": "#/components/schemas/UserDetail"
            },
            "type": "array"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "ArrayOfEngineCategories": {
        "items": {
          "$ref": "#/components/schemas/EngineCategoryDetail"
        },
        "type": "array"
      },
      "ArrayOfEngineInstanceWorkItem": {
        "items": {
          "$ref": "#/components/schemas/EngineInstanceWorkItem"
        },
        "type": "array"
      },
      "BuildDetail": {
        "properties": {
          "buildDefaultTTL": {
            "description": "The seconds on average a build should live if utilized",
            "format": "int32",
            "type": "integer"
          },
          "buildID": {
            "format": "uuid",
            "type": "string"
          },
          "buildState": {
            "description": "Build State",
            "type": "string"
          },
          "createdDateTime": {
            "description": "This is the datetime the core was created",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "diskFreeBytes": {
            "description": "The number of free bytes required to launch engine",
            "format": "int32",
            "type": "integer"
          },
          "dockerImage": {
            "description": "docker image",
            "type": "string"
          },
          "engineID": {
            "format": "uuid",
            "type": "string"
          },
          "licenseExpirationTimestamp": {
            "description": "The unix timestamp on when the license for the engine expires.  If 0, then it does not expire",
            "format": "int64",
            "type": "integer"
          },
          "manifestClusterSize": {
            "description": "Engine Size from the Manifest",
            "type": "string"
          },
          "manifestCustomProfile": {
            "description": "Engine Custom Profile from the Manifest",
            "type": "string"
          },
          "manifestEngineMode": {
            "description": "Engine Mode from the Manifest",
            "type": "string"
          },
          "manifestEngineName": {
            "description": "Name of the Engine from the Manifest",
            "type": "string"
          },
          "manifestGPUSupported": {
            "$ref": "#/components/schemas/GPUEnum"
          },
          "manifestRequireEC2": {
            "description": "Does the engine require EC2",
            "type": "boolean"
          },
          "modifiedDateTime": {
            "description": "This is the datetime the core was last modified.",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "softGPULimit": {
            "description": "The number of GPU required to launch engine",
            "format": "int32",
            "type": "integer"
          },
          "softMemoryBytesLimit": {
            "description": "The number of bytes required to launch this engine",
            "format": "int32",
            "type": "integer"
          },
          "softVCPULimit": {
            "description": "The number of VCPU based on 1024 required to launch engine",
            "format": "int32",
            "type": "integer"
          },
          "version": {
            "description": "version of the engine",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ConfigKey": {
        "type": "string"
      },
      "ConfigSection": {
        "description": "This contains the keys in a particular config section",
        "properties": {
          "keys": {
            "description": "Config Keys",
            "items": {
              "$ref": "#/components/schemas/ConfigSectionKey"
            },
            "type": "array"
          },
          "section": {
            "description": "The section for the config key",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConfigSectionKey": {
        "description": "Config Key Object",
        "properties": {
          "createdDateTime": {
            "description": "This is the datetime the core was created",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "key": {
            "description": "The Key",
            "type": "string"
          },
          "kvpJSON": {
            "description": "The KVP as JSON format",
            "format": "json",
            "type": "string"
          },
          "modifiedDateTime": {
            "description": "This is the datetime the core was last modified.",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "section": {
            "description": "The section for the config key",
            "type": "string"
          },
          "value": {
            "description": "The value for the Key",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContainerStatus": {
        "additionalProperties": true,
        "properties": {
          "CPUUtilization": {
            "description": "The CPU of the container as a percentage from 0-100",
            "format": "float",
            "type": "number"
          },
          "containerID": {
            "description": "This is the docker container id the engine instance",
            "type": "string"
          },
          "diskAvailableRoot": {
            "description": "The available bytes in the root partition",
            "format": "int64",
            "type": "integer"
          },
          "launchTimestamp": {
            "description": "Unix Epoch timestamp",
            "format": "int64",
            "type": "integer"
          },
          "memoryAvailable": {
            "description": "The available memory to the container in bytes",
            "format": "int64",
            "type": "integer"
          },
          "memoryUsed": {
            "description": "The memory used by container in bytes",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ContainerTypeEnum": {
        "enum": [
          "engine",
          "service"
        ],
        "type": "string"
      },
      "CoreDetail": {
        "properties": {
          "adhoc": {
            "description": "Download adhoc jobs",
            "type": "boolean"
          },
          "baseUrl": {
            "format": "url",
            "type": "string"
          },
          "clusterID": {
            "description": "Cluster ID",
            "type": "string"
          },
          "coreID": {
            "format": "uuid",
            "type": "string"
          },
          "coreUrl": {
            "format": "url",
            "type": "string"
          },
          "createdDateTime": {
            "description": "This is the datetime the core was created",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "endpoint": {
            "example": "/v3/graphql",
            "type": "string"
          },
          "isEnabled": {
            "description": "Is the core enabled",
            "type": "boolean"
          },
          "modifiedDateTime": {
            "description": "This is the datetime the core was last modified.",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "scheduled": {
            "description": "Download scheduled jobs",
            "type": "boolean"
          },
          "token": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateCoreDetail": {
        "properties": {
          "adhoc": {
            "description": "Download adhoc jobs",
            "type": "boolean"
          },
          "baseUrl": {
            "format": "url",
            "type": "string"
          },
          "clusterID": {
            "description": "Cluster ID",
            "type": "string"
          },
          "coreUrl": {
            "format": "url",
            "type": "string"
          },
          "endpoint": {
            "example": "/v3/graphql",
            "type": "string"
          },
          "isEnabled": {
            "description": "Is the core enabled",
            "type": "boolean"
          },
          "scheduled": {
            "description": "Download scheduled jobs",
            "type": "boolean"
          },
          "token": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateEngineCategoryDetail": {
        "description": "These are the fields required to create an engine category.",
        "properties": {
          "engineCategoryName": {
            "description": "The name of the engine category",
            "type": "string"
          },
          "engineCategoryType": {
            "description": "The type of the category",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateEngineCategoryResponse": {
        "properties": {
          "result": {
            "$ref": "#/components/schemas/EngineCategoryDetail"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "CreateEngineDetail": {
        "properties": {
          "applicationIDsJSON": {
            "description": "JSON Data for application_id",
            "format": "json",
            "type": "string"
          },
          "child_priority_adjustment_on_complete": {
            "description": "When this task completes, adjust the priority of child tasks by this value",
            "format": "int32",
            "type": "integer"
          },
          "dependencyJSON": {
            "description": "JSON Data for dependency",
            "format": "json",
            "type": "string"
          },
          "dontrunComplete": {
            "description": "If true, do not run this engine.  Complete as soon as possible and do not assign work.",
            "type": "boolean"
          },
          "edge_version": {
            "description": "edge version of the engine",
            "format": "int32",
            "type": "integer"
          },
          "engineCategoryID": {
            "description": "The UUID of the Engine Category",
            "format": "uuid",
            "type": "string"
          },
          "engineID": {
            "format": "uuid",
            "type": "string"
          },
          "engineName": {
            "description": "Name of the Engine",
            "type": "string"
          },
          "engineOutputType": {
            "$ref": "#/components/schemas/EngineTypeEnum"
          },
          "engineState": {
            "$ref": "#/components/schemas/EngineStateEnum"
          },
          "engineType": {
            "$ref": "#/components/schemas/EngineTypeEnum"
          },
          "fieldsJSON": {
            "description": "JSON Data for fields",
            "format": "json",
            "type": "string"
          },
          "internalOrganizationID": {
            "format": "uuid",
            "type": "string"
          },
          "jwtRightsJSON": {
            "description": "JSON Data for jwt_rights",
            "format": "json",
            "type": "string"
          },
          "parallelProcessing": {
            "description": "If true, the engine can handle multiple instances working against the same chunk task.",
            "type": "boolean"
          },
          "parentCompleteBeforeStart": {
            "description": "If true, the engine waits for the parent(s) to be complete before starting",
            "type": "boolean"
          },
          "priority_adjustment": {
            "description": "On new tasks with this engine, add this value to the priority of that task",
            "format": "int32",
            "type": "integer"
          },
          "replacementEngineID": {
            "format": "uuid",
            "type": "string"
          },
          "validationJSON": {
            "description": "JSON Data for validation",
            "format": "json",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateEngineRequest": {
        "properties": {
          "engine": {
            "$ref": "#/components/schemas/CreateEngineDetail"
          }
        },
        "type": "object"
      },
      "CreateEngineResponse": {
        "properties": {
          "result": {
            "$ref": "#/components/schemas/EngineDetail"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "CreateJobDetail": {
        "properties": {
          "coreID": {
            "format": "uuid",
            "type": "string"
          },
          "coreJobID": {
            "description": "This is the core job id associated with this job",
            "type": "string"
          },
          "coreRecordingID": {
            "description": "This is the recording id in the core of the content for this job",
            "format": "int64",
            "type": "integer"
          },
          "coreSourceID": {
            "default": 0,
            "description": "This is the Core Source Id",
            "format": "int64",
            "type": "integer"
          },
          "currentRetries": {
            "default": 0,
            "description": "This is the current retries for the job",
            "type": "integer"
          },
          "dueDateTime": {
            "description": "This is the time the job is due to be complete.  This is used by edge to set the priorities.",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "internalOrganizationID": {
            "format": "uuid",
            "type": "string"
          },
          "jobConfigJSON": {
            "description": "This is the job config expressed as JSON",
            "format": "JSON",
            "type": "string"
          },
          "jobStatus": {
            "$ref": "#/components/schemas/JobStatusEnum"
          },
          "taskRoutes": {
            "items": {
              "$ref": "#/components/schemas/TaskRouteDetail"
            },
            "type": "array"
          },
          "tasks": {
            "items": {
              "$ref": "#/components/schemas/CreateTaskDetail"
            },
            "type": "array"
          }
        },
        "required": [
          "internalOrganizationID"
        ],
        "type": "object"
      },
      "CreateJobRequest": {
        "properties": {
          "jobs": {
            "items": {
              "$ref": "#/components/schemas/CreateJobDetail"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreateJobResponse": {
        "properties": {
          "internalJobIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreateLicenseDetail": {
        "description": "This provides the detailed information about the license.",
        "properties": {
          "licenseKey": {
            "description": "This is the encoded license string",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateNextJobRequest": {
        "properties": {
          "jobInfo": {
            "description": "Configuration for the first task in the next job template in the pipeline",
            "properties": {
              "payloadJSON": {
                "description": "Payload to use for first task in the next job template in the pipeline",
                "format": "json",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "CreateNextJobResponse": {
        "properties": {
          "operation": {
            "$ref": "#/components/schemas/AdminOperationResponse"
          }
        },
        "type": "object"
      },
      "CreateNodRedContainerInfo": {
        "properties": {
          "automateContainerID": {
            "description": "The UUID of the Automate Container",
            "format": "uuid",
            "type": "string"
          },
          "buildID": {
            "format": "uuid",
            "type": "string"
          },
          "containerID": {
            "description": "This is the docker container id the engine instance",
            "type": "string"
          },
          "createdDateTime": {
            "description": "This is the datetime the core was created",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "engineID": {
            "format": "uuid",
            "type": "string"
          },
          "hostID": {
            "format": "uuid",
            "type": "string"
          },
          "hostIP": {
            "description": "IP of the host which include NR container",
            "type": "string"
          },
          "modifiedDateTime": {
            "description": "This is the datetime the core was last modified.",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "port": {
            "description": "Port of the NR container",
            "type": "string"
          },
          "userID": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateOrganizationDetail": {
        "properties": {
          "applicationID": {
            "format": "uuid",
            "type": "string"
          },
          "basePriority": {
            "type": "integer"
          },
          "coreOrganizationID": {
            "type": "integer"
          },
          "createdDateTime": {
            "description": "This is the datetime the core was created",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "defaultRetries": {
            "type": "integer"
          },
          "defaultSLASeconds": {
            "type": "integer"
          },
          "kvpJSON": {
            "format": "json",
            "type": "string"
          },
          "modifiedDateTime": {
            "description": "This is the datetime the core was last modified.",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "taskPriorityAdjustmentStarted": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CreateServerTypeDetail": {
        "properties": {
          "agentStartupScript": {
            "type": "string"
          },
          "awsAmi": {
            "type": "string"
          },
          "awsInstanceProfile": {
            "type": "string"
          },
          "awsInstanceType": {
            "type": "string"
          },
          "awsKeyName": {
            "type": "string"
          },
          "awsSecurityGroups": {
            "description": "aws subnets",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "awsSpot": {
            "type": "boolean"
          },
          "awsSpotMaxPrice": {
            "format": "float",
            "type": "number"
          },
          "awsSpotPersistent": {
            "type": "boolean"
          },
          "awsSubnets": {
            "description": "aws subnets",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "awsTagsJSON": {
            "format": "json",
            "type": "string"
          },
          "awsUserData": {
            "type": "string"
          },
          "gpuType": {
            "$ref": "#/components/schemas/GPUEnum"
          },
          "hasGPU": {
            "type": "boolean"
          },
          "isAutoScaleActive": {
            "type": "boolean"
          },
          "maxServers": {
            "format": "int64",
            "type": "integer"
          },
          "memoryBytes": {
            "format": "int64",
            "type": "integer"
          },
          "minServers": {
            "format": "int64",
            "type": "integer"
          },
          "numGPU": {
            "format": "int64",
            "type": "integer"
          },
          "onlyOrganizationId": {
            "format": "uuid",
            "type": "string"
          },
          "runModes": {
            "description": "run modes",
            "items": {
              "$ref": "#/components/schemas/RunModeEnum"
            },
            "type": "array"
          },
          "serverConfigJSON": {
            "format": "json",
            "type": "string"
          },
          "serverProvider": {
            "$ref": "#/components/schemas/ServerProviderEnum"
          },
          "serverTypeID": {
            "format": "uuid",
            "type": "string"
          },
          "vcpus": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CreateServerTypeRequest": {
        "description": "This is the request for Create Server Type",
        "properties": {
          "serverType": {
            "$ref": "#/components/schemas/CreateServerTypeDetail"
          }
        },
        "type": "object"
      },
      "CreateServerTypeResponse": {
        "description": "This is the response for Create Server Type",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ServerTypeDetail"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "CreateTaskDetail": {
        "properties": {
          "coreTaskId": {
            "description": "This is the core task id associated with this job",
            "type": "string"
          },
          "correlationTaskId": {
            "description": "Correlation Task Id.  On create, this will be used instead of internalTaskId or coreTaskId on routes",
            "type": "string"
          },
          "dueDateTime": {
            "description": "This is the time the task is due to be complete.  This is used by edge to set the priorities.",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "engineId": {
            "description": "The engineId to use.  If the engine is not available on edge, this will return an exception",
            "format": "uuid",
            "type": "string"
          },
          "ioFolders": {
            "items": {
              "$ref": "#/components/schemas/CreateTaskIOInfo"
            },
            "type": "array"
          },
          "maxEngines": {
            "description": "The maximum number of engine instances to run against this task.  Defaults to 1 if parallelProcessing is false, or 2 otherwise.",
            "type": "integer"
          },
          "maxRetries": {
            "default": null,
            "description": "This is the max retries for the task",
            "type": "integer"
          },
          "parallelProcessing": {
            "description": "If true, multiple engine instances can process this task in parallel.  If false, maxEngines will be 1.",
            "type": "boolean"
          },
          "parentMustBeCompleteBeforeStarting": {
            "description": "If true, this task won't start until the parent is complete",
            "type": "boolean"
          },
          "payloadJSON": {
            "description": "This is the payload encoded as a JSON string",
            "format": "json",
            "type": "string"
          },
          "priority": {
            "default": 0,
            "description": "The priority for the task. Default is 0.",
            "format": "int32",
            "type": "integer"
          },
          "taskPayloadJSON": {
            "description": "This is the taskPayload as a JSON string",
            "format": "json",
            "type": "string"
          },
          "taskStatus": {
            "$ref": "#/components/schemas/JobStatusEnum"
          }
        },
        "required": [
          "engineId"
        ],
        "type": "object"
      },
      "CreateTaskIOInfo": {
        "description": "This is the task IO Object that provides paramenters for the input and output",
        "properties": {
          "correlationID": {
            "description": "On create, this field will be used to look up task routes for binding.",
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/TaskIOModeEnum"
          },
          "optionsJSON": {
            "description": "Any options for this input or output folder for the task to use on processing",
            "format": "json",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/TaskIOTypeEnum"
          }
        },
        "type": "object"
      },
      "CreateTokenDetail": {
        "properties": {
          "apiRateLimitHour": {
            "format": "int64",
            "type": "integer"
          },
          "bytesRateLimitHour": {
            "format": "int64",
            "type": "integer"
          },
          "engineInstanceID": {
            "format": "uuid",
            "type": "string"
          },
          "expiration": {
            "description": "This is the datetime the core was created",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "hostID": {
            "format": "uuid",
            "type": "string"
          },
          "kvpJSON": {
            "format": "json",
            "type": "string"
          },
          "maxAPI": {
            "format": "int64",
            "type": "integer"
          },
          "maxBytes": {
            "format": "int64",
            "type": "integer"
          },
          "maxTasks": {
            "format": "int64",
            "type": "integer"
          },
          "organizationIDs": {
            "items": {
              "$ref": "#/components/schemas/OrganizationID"
            },
            "type": "array"
          },
          "taskRateLimitHour": {
            "format": "int64",
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/TokenTypeEnum"
          }
        },
        "type": "object"
      },
      "CreateUserDetail": {
        "properties": {
          "displayName": {
            "type": "string"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "internalOrganizationID": {
            "format": "uuid",
            "type": "string"
          },
          "kvpJSON": {
            "format": "json",
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "passwordChangeRequired": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/UserStatusEnum"
          },
          "userID": {
            "format": "uuid",
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "userSettingsJSON": {
            "format": "json",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteBuildRequest": {
        "properties": {
          "buildID": {
            "format": "uuid",
            "type": "string"
          },
          "engineID": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteEngineRequest": {
        "properties": {
          "engineID": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteJobRequest": {
        "properties": {
          "jobID": {
            "description": "Core Job ID",
            "format": "string",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteServerTypeRequest": {
        "properties": {
          "serverTypeID": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DesiredServersToServerTypeRequest": {
        "properties": {
          "desiredServers": {
            "description": "The number of servers for this server type",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DockerRegistry": {
        "properties": {
          "dockerPassword": {
            "description": "This is the password for the docker username",
            "type": "string"
          },
          "dockerRegistryURL": {
            "type": "string"
          },
          "dockerUsername": {
            "description": "This is the username that provides access to the docker registry to pull images",
            "type": "string"
          },
          "isAIWareRegistry": {
            "type": "boolean"
          },
          "name": {
            "description": "This is the name for the Repo",
            "type": "string"
          },
          "token": {
            "description": "This is a token to use for authentication",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DrainHostRequest": {
        "properties": {
          "detail": {
            "type": "string"
          },
          "reason": {
            "$ref": "#/components/schemas/HostDrainReasonEnum"
          }
        },
        "type": "object"
      },
      "EngineCategoryDetail": {
        "properties": {
          "createdDateTime": {
            "description": "This is the datetime the core was created",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "engineCategoryID": {
            "description": "The engine category ID.",
            "format": "uuid",
            "type": "string"
          },
          "engineCategoryName": {
            "description": "The name of the engine category",
            "type": "string"
          },
          "engineCategoryType": {
            "description": "The type of the category",
            "type": "string"
          },
          "modifiedDateTime": {
            "description": "This is the datetime the core was last modified.",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EngineDetail": {
        "properties": {
          "applicationIDsJSON": {
            "description": "JSON Data for application_id",
            "format": "json",
            "type": "string"
          },
          "child_priority_adjustment_on_complete": {
            "description": "When this task completes, adjust the priority of child tasks by this value",
            "format": "int32",
            "type": "integer"
          },
          "createdDateTime": {
            "description": "This is the datetime the core was created",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "dependencyJSON": {
            "description": "JSON Data for dependency",
            "format": "json",
            "type": "string"
          },
          "dontrunComplete": {
            "description": "If true, do not run this engine.  Complete as soon as possible and do not assign work.",
            "type": "boolean"
          },
          "edge_version": {
            "description": "edge version of the engine",
            "format": "int32",
            "type": "integer"
          },
          "engineCategoryID": {
            "description": "The UUID of the Engine Category",
            "format": "uuid",
            "type": "string"
          },
          "engineID": {
            "format": "uuid",
            "type": "string"
          },
          "engineName": {
            "description": "Name of the Engine",
            "type": "string"
          },
          "engineOutputType": {
            "$ref": "#/components/schemas/EngineTypeEnum"
          },
          "engineState": {
            "$ref": "#/components/schemas/EngineStateEnum"
          },
          "engineType": {
            "$ref": "#/components/schemas/EngineTypeEnum"
          },
          "fieldsJSON": {
            "description": "JSON Data for fields",
            "format": "json",
            "type": "string"
          },
          "internalOrganizationID": {
            "format": "uuid",
            "type": "string"
          },
          "jwtRightsJSON": {
            "description": "JSON Data for jwt_rights",
            "format": "json",
            "type": "string"
          },
          "modifiedDateTime": {
            "description": "This is the datetime the core was last modified.",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "parallelProcessing": {
            "description": "If true, the engine can handle multiple instances working against the same chunk task.",
            "type": "boolean"
          },
          "parentCompleteBeforeStart": {
            "description": "If true, the engine waits for the parent(s) to be complete before starting",
            "type": "boolean"
          },
          "priority_adjustment": {
            "description": "On new tasks with this engine, add this value to the priority of that task",
            "format": "int32",
            "type": "integer"
          },
          "replacementEngineID": {
            "format": "uuid",
            "type": "string"
          },
          "validationJSON": {
            "description": "JSON Data for validation",
            "format": "json",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EngineInstanceActionEnum": {
        "enum": [
          "process",
          "wait",
          "terminate"
        ],
        "type": "string"
      },
      "EngineInstanceInfo": {
        "description": "EngineInstance Information",
        "properties": {
          "additionalEngineIDs": {
            "description": "This is a list of additional engines this instance can handle",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "buildID": {
            "format": "uuid",
            "type": "string"
          },
          "dockerContainerID": {
            "description": "The docker container PID",
            "type": "string"
          },
          "engineID": {
            "format": "uuid",
            "type": "string"
          },
          "engineInstanceID": {
            "format": "uuid",
            "type": "string"
          },
          "engineToolkitVersion": {
            "description": "The engine toolkit version",
            "type": "string"
          },
          "errors": {
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "type": "array"
          },
          "hostID": {
            "format": "uuid",
            "type": "string"
          },
          "launchEnvVariables": {
            "type": "object"
          },
          "launchID": {
            "format": "uuid",
            "type": "string"
          },
          "launchStatus": {
            "$ref": "#/components/schemas/LaunchStatusEnum"
          },
          "launchStatusInfo": {
            "description": "Additional to log about launch status",
            "type": "string"
          },
          "licenseExpirationSeconds": {
            "description": "Seconds till the license expires",
            "type": "integer"
          },
          "runtimeExpirationSeconds": {
            "description": "Seconds till runtime should expire",
            "type": "integer"
          },
          "startupTimestamp": {
            "description": "Timestamp of engine instance startup in UTC",
            "format": "int64",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/EngineStatusEnum"
          },
          "warnings": {
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EngineInstanceRegistrationInfo": {
        "properties": {
          "action": {
            "$ref": "#/components/schemas/EngineRegistrationActionEnum"
          },
          "engineInstanceID": {
            "format": "uuid",
            "type": "string"
          },
          "engineInstanceToken": {
            "description": "This is the security token the engine must use on other calls",
            "type": "string"
          },
          "runtimeExpirationSeconds": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EngineInstanceStatus": {
        "description": "payload for updateEngineInstanceStatus API -",
        "properties": {
          "containerStatus": {
            "$ref": "#/components/schemas/ContainerStatus"
          },
          "hostID": {
            "format": "uuid",
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/EngineInstanceStatusModeEnum"
          },
          "priorTimestamp": {
            "description": "UTC Timestamp of last status update or start of new task",
            "format": "int64",
            "type": "integer"
          },
          "secondsToTTL": {
            "type": "integer"
          },
          "taskStatuses": {
            "items": {
              "$ref": "#/components/schemas/TaskStatusDetail"
            },
            "type": "array"
          },
          "timestamp": {
            "description": "UTC Timestamp of NOW()",
            "format": "int64",
            "type": "integer"
          },
          "workRequestDetails": {
            "type": "string"
          },
          "workRequestID": {
            "format": "uuid",
            "type": "string"
          },
          "workRequestStatus": {
            "$ref": "#/components/schemas/WorkRequestStatusEnum",
            "description": "The final status of the last work request"
          }
        },
        "type": "object"
      },
      "EngineInstanceStatusModeEnum": {
        "enum": [
          "idle",
          "processing"
        ],
        "type": "string"
      },
      "EngineInstanceWorkDetailsResponse": {
        "description": "response payload for workdetail",
        "properties": {
          "result": {
            "properties": {
              "workItem": {
                "$ref": "#/components/schemas/ArrayOfEngineInstanceWorkItem"
              },
              "workRequestDetails": {
                "type": "string"
              },
              "workRequestID": {
                "format": "uuid",
                "type": "string"
              },
              "workRequestStatus": {
                "$ref": "#/components/schemas/WorkRequestStatusEnum"
              }
            },
            "type": "object"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "EngineInstanceWorkItem": {
        "additionalProperties": true,
        "properties": {
          "engineID": {
            "format": "uuid",
            "type": "string"
          },
          "engineType": {
            "$ref": "#/components/schemas/EngineTypeEnum"
          },
          "internalJobID": {
            "description": "Internal Job ID",
            "format": "uuid",
            "type": "string"
          },
          "internalOrganizationID": {
            "format": "uuid",
            "type": "string"
          },
          "internalTaskID": {
            "description": "Internal Task ID",
            "format": "uuid",
            "type": "string"
          },
          "isRetry": {
            "description": "If true, a prior version of this task has failed.  The outputs and inputs have to be reset based on the work that has been processed by the downstream tasks",
            "type": "boolean"
          },
          "jobID": {
            "description": "Core Job ID",
            "format": "string",
            "type": "string"
          },
          "organizationID": {
            "description": "This is the organization id in core (int), not the internal organization id",
            "type": "integer"
          },
          "taskID": {
            "description": "Core Task ID",
            "format": "string",
            "type": "string"
          },
          "taskIOs": {
            "items": {
              "$ref": "#/components/schemas/TaskIO"
            },
            "type": "array"
          },
          "taskPayload": {
            "type": "object"
          },
          "taskRouteID": {
            "description": "the task route associated with this work item",
            "type": "string"
          },
          "unitCountToProcess": {
            "description": "The number of units to process. Applicable to chunk engines, number of chunks to work on this task",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EngineInstanceWorkRequest": {
        "properties": {
          "containerStatus": {
            "$ref": "#/components/schemas/ContainerStatus"
          },
          "hostAction": {
            "$ref": "#/components/schemas/HostActionEnum"
          },
          "hostID": {
            "format": "uuid",
            "type": "string"
          },
          "requestWorkForEngineIds": {
            "description": "This is the set of engine ids that this instance will get work for.  Controller will return the highest priority task across the set of engine ids",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "taskStatuses": {
            "items": {
              "$ref": "#/components/schemas/TaskStatusDetail"
            },
            "type": "array"
          },
          "workRequestDetails": {
            "type": "string"
          },
          "workRequestID": {
            "format": "uuid",
            "type": "string"
          },
          "workRequestStatus": {
            "$ref": "#/components/schemas/WorkRequestStatusEnum"
          }
        },
        "type": "object"
      },
      "EngineInstanceWorkRequestResponse": {
        "additionalProperties": true,
        "properties": {
          "result": {
            "properties": {
              "action": {
                "$ref": "#/components/schemas/EngineInstanceActionEnum"
              },
              "workItem": {
                "$ref": "#/components/schemas/ArrayOfEngineInstanceWorkItem"
              },
              "workRequestID": {
                "format": "uuid",
                "type": "string"
              }
            },
            "type": "object"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "EngineLaunchDetail": {
        "properties": {
          "completedTimestamp": {
            "description": "UTC Timestamp of NOW() when launch was completed",
            "format": "int64",
            "type": "integer"
          },
          "createdDateTime": {
            "description": "This is the datetime the core was created",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "hostID": {
            "format": "uuid",
            "type": "string"
          },
          "launchAction": {
            "$ref": "#/components/schemas/LaunchActionEnum"
          },
          "launchID": {
            "format": "uuid",
            "type": "string"
          },
          "launchStatus": {
            "$ref": "#/components/schemas/LaunchStatusEnum"
          },
          "launchSuccessful": {
            "description": "If true, the launch was successful",
            "type": "boolean"
          },
          "modifiedDateTime": {
            "description": "This is the datetime the core was last modified.",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EngineRegistrationActionEnum": {
        "enum": [
          "launch",
          "terminate"
        ],
        "type": "string"
      },
      "EngineStateEnum": {
        "description": "This describes the different states of the engine.  If paused, the tasks for this engine will not run.  If replace, then a different engine as specified in the table will be used.",
        "enum": [
          "active",
          "paused",
          "replace"
        ],
        "type": "string"
      },
      "EngineStatusEnum": {
        "enum": [
          "active",
          "terminated"
        ],
        "type": "string"
      },
      "EngineTypeEnum": {
        "description": "These are the different types of engines on what they can consume.  Chunk engines can consumes messages.  Stream engines consume bytes.  Batch does not consume anything.",
        "enum": [
          "chunk",
          "stream",
          "batch",
          "any"
        ],
        "type": "string"
      },
      "EnvKeyValue": {
        "description": "Environment variable",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Error": {
        "additionalProperties": true,
        "properties": {
          "errorDescription": {
            "description": "Description of Error",
            "type": "string"
          },
          "errorDetail": {
            "description": "Details about runtime information on error. This includes items like Job ID and Task ID",
            "type": "string"
          },
          "errorId": {
            "description": "Unique Error ID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FailureReasonEnum": {
        "description": "Task Failure Reason if taskStatus=`failed`. Available at the end of a batch, when getting the next batch to work, or last heartbeat before exiting. May not present in heartbeat update",
        "enum": [
          "internal_error",
          "unknown",
          "connection",
          "rate_limited",
          "unauthorized",
          "api",
          "resources",
          "not_found",
          "core_api",
          "bad_data",
          "none"
        ],
        "type": "string"
      },
      "GPUEnum": {
        "enum": [
          "none",
          "aws_p2",
          "aws_p3"
        ],
        "type": "string"
      },
      "GetCoresResponse": {
        "description": "This is the response for get_cores Request",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/CoreDetail"
            },
            "type": "array"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "GetEngineBuildResponse": {
        "description": "This is the response for get_engine_build Request",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/BuildDetail"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "GetEngineBuildsResponse": {
        "description": "This is the response for get_engine_builds Request",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/BuildDetail"
            },
            "type": "array"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "GetEngineCategoriesResponse": {
        "description": "This is the response object for get engine categories.",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ArrayOfEngineCategories"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "GetEngineCategoryDetailResponse": {
        "properties": {
          "result": {
            "$ref": "#/components/schemas/EngineCategoryDetail"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "GetEngineDetailResponse": {
        "description": "This is the response for get_engine_detail",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/EngineDetail"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "GetEngineLaunchResponse": {
        "description": "This is the response for get_engine_detail",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/EngineLaunchDetail"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "GetEngineLaunchesResponse": {
        "description": "This is the response for get_engine_launches",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/EngineLaunchDetail"
            },
            "type": "array"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "GetEnginesResponse": {
        "description": "This is the response for get_engines Request",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/EngineDetail"
            },
            "type": "array"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "GetHostLaunchResponse": {
        "description": "This is the response for get_host_detail",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/HostLaunchDetail"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "GetJobDetailResponse": {
        "properties": {
          "job": {
            "$ref": "#/components/schemas/JobDetail"
          }
        },
        "type": "object"
      },
      "GetJobListResponse": {
        "properties": {
          "count": {
            "description": "Total records for the query",
            "type": "integer"
          },
          "limit": {
            "description": "the number of jobs to return.",
            "type": "integer"
          },
          "offset": {
            "description": "the number of jobs to skip before getting the result set",
            "type": "integer"
          },
          "result": {
            "items": {
              "$ref": "#/components/schemas/JobDetail"
            },
            "type": "array"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "GetJobOutputResponse": {
        "properties": {
          "output": {
            "$ref": "#/components/schemas/JobOutput"
          }
        },
        "type": "object"
      },
      "GetJobOutputsResponse": {
        "properties": {
          "outputs": {
            "$ref": "#/components/schemas/JobOutputs"
          }
        },
        "type": "object"
      },
      "GetJobStatusResponse": {
        "properties": {
          "job": {
            "$ref": "#/components/schemas/JobStatus"
          }
        },
        "type": "object"
      },
      "GetJobWorkRequestResponse": {
        "description": "This is the response for get Job Work-request Request",
        "properties": {
          "count": {
            "description": "Total records for the query",
            "type": "integer"
          },
          "limit": {
            "description": "the number of records to return.",
            "type": "integer"
          },
          "offset": {
            "description": "the number of records to skip before getting the result set",
            "type": "integer"
          },
          "result": {
            "items": {
              "$ref": "#/components/schemas/JobWorkRequest"
            },
            "type": "array"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "GetJobsOrganizationStatsResponse": {
        "example": {
          "counts": [
            {
              "count": 1,
              "organizationId": 7682,
              "organizationName": "Veritone Inc",
              "status": "pending"
            },
            {
              "count": 2,
              "organizationId": 7682,
              "organizationName": "Veritone Inc",
              "status": "running"
            }
          ],
          "endDateTime": "2018-03-20T10:12:58.000Z",
          "startDateTime": "2018-03-20T09:12:28.000Z"
        },
        "properties": {
          "counts": {
            "items": {
              "$ref": "#/components/schemas/JobsOrganizationCountsInfo"
            },
            "type": "array"
          },
          "endDateTime": {
            "description": "This is the datetime of the end of the stats period",
            "example": "2018-03-20T10:12:28.000Z",
            "format": "date-time",
            "type": "string"
          },
          "startDateTime": {
            "description": "This is the datetime of the beginning of the stats period",
            "example": "2018-03-20T09:12:28.000Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetJobsPerformanceResponse": {
        "example": {
          "data": [
            {
              "cpu": 10,
              "dateTime": "2018-03-20T08:00:00.000Z",
              "gpu": 0,
              "memory": 20
            },
            {
              "cpu": 0,
              "dateTime": "2018-03-20T09:00:00.000Z",
              "gpu": 20,
              "memory": 40
            }
          ],
          "endDateTime": "2018-03-20T10:12:28.000Z",
          "startDateTime": "2018-03-20T09:12:28.000Z"
        },
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/JobPerformanceInfo"
            },
            "type": "array"
          },
          "endDateTime": {
            "description": "This is the datetime of the end of the stats period",
            "example": "2018-03-20T10:12:28.000Z",
            "format": "date-time",
            "type": "string"
          },
          "startDateTime": {
            "description": "This is the datetime of the beginning of the stats period",
            "example": "2018-03-20T09:12:28.000Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetJobsStatsResponse": {
        "example": {
          "counts": [
            {
              "count": 0
            },
            {
              "count": 0
            }
          ],
          "endDateTime": "2018-03-20T10:12:28.000Z",
          "startDateTime": "2018-03-20T09:12:28.000Z"
        },
        "properties": {
          "counts": {
            "items": {
              "$ref": "#/components/schemas/JobsCountsInfo"
            },
            "type": "array"
          },
          "endDateTime": {
            "description": "This is the datetime of the end of the stats period",
            "example": "2018-03-20T10:12:28.000Z",
            "format": "date-time",
            "type": "string"
          },
          "startDateTime": {
            "description": "This is the datetime of the beginning of the stats period",
            "example": "2018-03-20T09:12:28.000Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetJobsTimeRangesStatsResponse": {
        "example": {
          "counts": [
            {
              "count": 0,
              "endDateTime": "2018-03-20T10:12:28.000Z",
              "startDateTime": "2018-03-20T09:12:28.000Z"
            },
            {
              "count": 0,
              "endDateTime": "2018-03-20T10:12:28.000Z",
              "startDateTime": "2018-03-20T09:12:28.000Z"
            }
          ],
          "endDateTime": "2018-03-20T10:12:28.000Z",
          "startDateTime": "2018-03-20T09:12:28.000Z"
        },
        "properties": {
          "counts": {
            "items": {
              "$ref": "#/components/schemas/JobsTimeRangesCountsInfo"
            },
            "type": "array"
          },
          "endDateTime": {
            "description": "This is the datetime of the end of the stats period",
            "example": "2018-03-20T10:12:28.000Z",
            "format": "date-time",
            "type": "string"
          },
          "startDateTime": {
            "description": "This is the datetime of the beginning of the stats period",
            "example": "2018-03-20T09:12:28.000Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetLicensesResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/LicenseDetail"
            },
            "type": "array"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "GetServerTypeResponse": {
        "description": "This is the response for get Server Type Request",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ServerTypeDetail"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "GetServerTypesResponse": {
        "description": "This is the response for get Server Type Request",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/ServerTypeDetail"
            },
            "type": "array"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "GetTaskDetailResponse": {
        "properties": {
          "task": {
            "$ref": "#/components/schemas/TaskDetail"
          }
        },
        "type": "object"
      },
      "GetTaskOutputResponse": {
        "properties": {
          "output": {
            "$ref": "#/components/schemas/TaskOutput"
          }
        },
        "type": "object"
      },
      "GetTaskOutputsResponse": {
        "properties": {
          "outputs": {
            "$ref": "#/components/schemas/TaskOutputs"
          }
        },
        "type": "object"
      },
      "GetTasksEnginesStatsResponse": {
        "example": {
          "counts": [
            {
              "count": 0,
              "engineCategoryName": "Logo Recognition"
            },
            {
              "count": 0,
              "engineCategoryName": "Logo Recognition"
            }
          ],
          "endDateTime": "2018-03-20T10:12:28.000Z",
          "startDateTime": "2018-03-20T09:12:28.000Z"
        },
        "properties": {
          "counts": {
            "items": {
              "$ref": "#/components/schemas/TasksEnginesCountsInfo"
            },
            "type": "array"
          },
          "endDateTime": {
            "description": "This is the datetime of the end of the stats period",
            "example": "2018-03-20T10:12:28.000Z",
            "format": "date-time",
            "type": "string"
          },
          "startDateTime": {
            "description": "This is the datetime of the beginning of the stats period",
            "example": "2018-03-20T09:12:28.000Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetTasksHostsStatsResponse": {
        "example": {
          "counts": [
            {
              "count": 0,
              "engineCategoryName": "Translation",
              "hostName": "Host1"
            },
            {
              "count": 0,
              "engineCategoryName": "Translation",
              "hostName": "Host1"
            }
          ],
          "endDateTime": "2018-03-20T10:12:28.000Z",
          "startDateTime": "2018-03-20T09:12:28.000Z"
        },
        "properties": {
          "counts": {
            "items": {
              "$ref": "#/components/schemas/TasksHostsCountsInfo"
            },
            "type": "array"
          },
          "endDateTime": {
            "description": "This is the datetime of the end of the stats period",
            "example": "2018-03-20T10:12:28.000Z",
            "format": "date-time",
            "type": "string"
          },
          "startDateTime": {
            "description": "This is the datetime of the beginning of the stats period",
            "example": "2018-03-20T09:12:28.000Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetTasksResponse": {
        "properties": {
          "count": {
            "description": "Total records for the query",
            "type": "integer"
          },
          "limit": {
            "description": "the number of tasks to return.",
            "type": "integer"
          },
          "offset": {
            "description": "the number of tasks to skip before getting the result set",
            "type": "integer"
          },
          "result": {
            "items": {
              "$ref": "#/components/schemas/TaskDetail"
            },
            "type": "array"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "GetTasksStatsResponse": {
        "example": {
          "counts": [
            {
              "count": 0
            },
            {
              "count": 0
            }
          ],
          "endDateTime": "2018-03-20T10:12:28.000Z",
          "startDateTime": "2018-03-20T09:12:28.000Z"
        },
        "properties": {
          "counts": {
            "items": {
              "$ref": "#/components/schemas/TasksCountsInfo"
            },
            "type": "array"
          },
          "endDateTime": {
            "description": "This is the datetime of the end of the stats period",
            "example": "2018-03-20T10:12:28.000Z",
            "format": "date-time",
            "type": "string"
          },
          "startDateTime": {
            "description": "This is the datetime of the beginning of the stats period",
            "example": "2018-03-20T09:12:28.000Z",
            "format": "date-time",
            "type": "string"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "GetTasksTimeRangesStatsResponse": {
        "example": {
          "counts": [
            {
              "count": 0,
              "endDateTime": "2018-03-20T10:12:28.000Z",
              "startDateTime": "2018-03-20T09:12:28.000Z"
            },
            {
              "count": 0,
              "endDateTime": "2018-03-20T10:12:28.000Z",
              "startDateTime": "2018-03-20T09:12:28.000Z"
            }
          ],
          "endDateTime": "2018-03-20T10:12:28.000Z",
          "startDateTime": "2018-03-20T09:12:28.000Z"
        },
        "properties": {
          "counts": {
            "items": {
              "$ref": "#/components/schemas/TasksTimeRangesCountsInfo"
            },
            "type": "array"
          },
          "endDateTime": {
            "description": "This is the datetime of the end of the stats period",
            "example": "2018-03-20T10:12:28.000Z",
            "format": "date-time",
            "type": "string"
          },
          "startDateTime": {
            "description": "This is the datetime of the beginning of the stats period",
            "example": "2018-03-20T09:12:28.000Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HostAction": {
        "properties": {
          "launchContainer": {
            "items": {
              "$ref": "#/components/schemas/HostActionLaunch"
            },
            "type": "array"
          },
          "launchNodeRedContainer": {
            "items": {
              "$ref": "#/components/schemas/HostActionNodeRedLaunch"
            },
            "type": "array"
          },
          "mode": {
            "$ref": "#/components/schemas/HostActionModeEnum"
          },
          "nfsServers": {
            "items": {
              "$ref": "#/components/schemas/HostMountInfo"
            },
            "type": "array"
          },
          "registries": {
            "items": {
              "$ref": "#/components/schemas/DockerRegistry"
            },
            "type": "array"
          },
          "terminateContainer": {
            "items": {
              "$ref": "#/components/schemas/HostActionTerminate"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "HostActionEnum": {
        "enum": [
          "terminate",
          "running"
        ],
        "type": "string"
      },
      "HostActionLaunch": {
        "description": "Launch request",
        "properties": {
          "buildId": {
            "description": "the buildId for the engine",
            "type": "string"
          },
          "containerConfig": {
            "properties": {
              "commandLine": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "containerType": {
            "$ref": "#/components/schemas/ContainerTypeEnum"
          },
          "dockerImage": {
            "description": "Docker image to launch",
            "type": "string"
          },
          "engineId": {
            "description": "The id of the engine to launch",
            "type": "string"
          },
          "env": {
            "items": {
              "$ref": "#/components/schemas/EnvKeyValue"
            },
            "type": "array"
          },
          "launchId": {
            "description": "The Launch ID to use for the launch",
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "description": "The name of the engine or process to launch. This is informational only.",
            "type": "string"
          },
          "runtime": {
            "description": "the runtime for the build",
            "type": "string"
          },
          "runtimeTTL": {
            "description": "Seconds to run",
            "type": "integer"
          },
          "softMinMemory": {
            "format": "int64",
            "type": "integer"
          },
          "softMinvCPU": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "HostActionModeEnum": {
        "description": "Runtime mode for Host.  Continue is for normal processing.  Drain puts the agent into drain mode.  Terminate is shutdown",
        "enum": [
          "continue",
          "drain",
          "pause",
          "terminate"
        ],
        "type": "string"
      },
      "HostActionNodeRedLaunch": {
        "description": "Launch request",
        "properties": {
          "buildId": {
            "description": "the buildId for the engine",
            "type": "string"
          },
          "containerConfig": {
            "properties": {
              "commandLine": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "containerType": {
            "$ref": "#/components/schemas/ContainerTypeEnum"
          },
          "dockerContainerName": {
            "description": "Docker container name to launch",
            "type": "string"
          },
          "dockerImage": {
            "description": "Docker image to launch",
            "type": "string"
          },
          "engineId": {
            "description": "The id of the engine to launch",
            "type": "string"
          },
          "env": {
            "items": {
              "$ref": "#/components/schemas/EnvKeyValue"
            },
            "type": "array"
          },
          "hostId": {
            "description": "HostID of the node-red container",
            "type": "string"
          },
          "launchId": {
            "description": "The Launch ID to use for the launch",
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "description": "The name of the engine or process to launch. This is informational only.",
            "type": "string"
          },
          "port": {
            "description": "Port of the node-red container",
            "type": "string"
          },
          "runtimeTTL": {
            "description": "Seconds to run",
            "type": "integer"
          },
          "softMinMemory": {
            "format": "int64",
            "type": "integer"
          },
          "softMinvCPU": {
            "type": "integer"
          },
          "userId": {
            "description": "The userId of the current user.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HostActionTerminate": {
        "properties": {
          "dockerContainerId": {
            "description": "Docker image to launch",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HostDetail": {
        "additionalProperties": true,
        "properties": {
          "agentCommitID": {
            "description": "The agent ID",
            "type": "string"
          },
          "agentLabel": {
            "description": "The build label for the agent",
            "type": "string"
          },
          "agentVersionNumber": {
            "description": "the agent version",
            "type": "string"
          },
          "cloudProviderInstanceId": {
            "description": "The instance id for the cloud provider",
            "type": "string"
          },
          "dockerHostID": {
            "description": "This is the docker host ID",
            "type": "string"
          },
          "dockerInfo": {
            "description": "The output from `docker info`",
            "type": "string"
          },
          "drainDetail": {
            "description": "More information if available on the drain action",
            "type": "string"
          },
          "drainReason": {
            "$ref": "#/components/schemas/HostDrainReasonEnum"
          },
          "hostID": {
            "description": "This is the host id",
            "type": "string"
          },
          "ips": {
            "description": "An array of IPs either IPv4 or IPv6 that are valid for this host",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "serverTypeID": {
            "format": "uuid",
            "type": "string"
          },
          "shouldExpire": {
            "description": "Should this host expire.  Default to false.",
            "type": "boolean"
          },
          "suggestedRuntimeTTL": {
            "description": "The length of time this host suggest it should be up",
            "format": "int",
            "type": "integer"
          },
          "terminationDetail": {
            "description": "More information if available on the termination",
            "type": "string"
          },
          "terminationReason": {
            "$ref": "#/components/schemas/HostTerminationReasonEnum"
          }
        },
        "type": "object"
      },
      "HostDrainReasonEnum": {
        "description": "The reason for draining the host",
        "enum": [
          "none",
          "controller",
          "expiration",
          "spot",
          "user",
          "hardware",
          "other"
        ],
        "type": "string"
      },
      "HostLaunchConfig": {
        "properties": {
          "controller": {
            "$ref": "#/components/schemas/HostLaunchControllerConfig"
          },
          "modes": {
            "items": {
              "$ref": "#/components/schemas/RunModeEnum"
            },
            "type": "array"
          },
          "nfs": {
            "$ref": "#/components/schemas/HostLaunchNFSConfig"
          },
          "postgres": {
            "$ref": "#/components/schemas/HostLaunchPostgresConfig"
          },
          "registry": {
            "$ref": "#/components/schemas/HostLaunchRegistryConfig"
          }
        },
        "type": "object"
      },
      "HostLaunchControllerConfig": {
        "properties": {
          "containerId": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "imageId": {
            "type": "string"
          },
          "port": {
            "type": "integer"
          },
          "protocol": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "HostLaunchDetail": {
        "properties": {
          "completedTimestamp": {
            "description": "UTC Timestamp of NOW() when launch was completed",
            "format": "int64",
            "type": "integer"
          },
          "createdDateTime": {
            "description": "This is the datetime the core was created",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "hostID": {
            "format": "uuid",
            "type": "string"
          },
          "launchAction": {
            "$ref": "#/components/schemas/LaunchActionEnum"
          },
          "launchID": {
            "format": "uuid",
            "type": "string"
          },
          "launchStatus": {
            "$ref": "#/components/schemas/LaunchStatusEnum"
          },
          "launchSuccessful": {
            "description": "If true, the launch was successful",
            "type": "boolean"
          },
          "modifiedDateTime": {
            "description": "This is the datetime the core was last modified.",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "serverTypeID": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HostLaunchNFSConfig": {
        "properties": {
          "containerId": {
            "type": "string"
          },
          "imageId": {
            "type": "string"
          },
          "port": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "HostLaunchPostgresConfig": {
        "properties": {
          "containerId": {
            "type": "string"
          },
          "dbname": {
            "type": "string"
          },
          "imageId": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "port": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "HostLaunchRegistryConfig": {
        "properties": {
          "containerId": {
            "type": "string"
          },
          "imageId": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "port": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "HostMountInfo": {
        "description": "This payload directs the agent to mount the specified directories on the hosts.",
        "properties": {
          "cache_number": {
            "description": "the cache number for the nfs mount.  0 is /cache, 1 is /cache/1, ...",
            "type": "integer"
          },
          "ips": {
            "description": "The host name or IP to mount.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "local_path": {
            "description": "The mount on the local filesystem",
            "type": "string"
          },
          "mountType": {
            "$ref": "#/components/schemas/HostMountTypeEnum"
          },
          "options": {
            "description": "a comma separated list of options to pass into the mount commmand.  An example is nfsvers=4,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport",
            "type": "string"
          },
          "port": {
            "description": "The port the NFS service is listening on",
            "type": "integer"
          },
          "priority": {
            "description": "The priority to mount them.  Lowest first to highest numbers.  For example, /cache is 10, /cache/1 is 100. If they have the same priority then they are run in random order for the priority number.",
            "type": "integer"
          },
          "server_path": {
            "description": "The mount path to mount",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HostMountTypeEnum": {
        "enum": [
          "nfs",
          "ext4"
        ],
        "type": "string"
      },
      "HostRegisterRequest": {
        "properties": {
          "info": {
            "$ref": "#/components/schemas/HostDetail"
          },
          "launchConfig": {
            "$ref": "#/components/schemas/HostLaunchConfig"
          },
          "status": {
            "$ref": "#/components/schemas/HostStatus"
          }
        },
        "type": "object"
      },
      "HostRegisterResponse": {
        "additionalProperties": true,
        "properties": {
          "configProperties": {
            "properties": {
              "localCacheDirectory": {
                "description": "This should be /cache and will be mapped to the containers as /cache",
                "type": "string"
              },
              "veritoneDockerRegistries": {
                "items": {
                  "$ref": "#/components/schemas/DockerRegistry"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "hostID": {
            "description": "Old or NEW Host ID dependinng on whether it was registered before",
            "format": "uuid",
            "type": "string"
          },
          "hostToken": {
            "description": "API Token for Host to use going forward.",
            "format": "uuid",
            "type": "string"
          },
          "mount": {
            "items": {
              "$ref": "#/components/schemas/HostMountInfo"
            },
            "type": "array"
          },
          "status": {
            "$ref": "#/components/schemas/HostAction"
          }
        },
        "type": "object"
      },
      "HostStatus": {
        "properties": {
          "CPUUtilized": {
            "description": "The CPU of the container as a percentage from 0-100",
            "format": "float",
            "type": "number"
          },
          "containerStatus": {
            "items": {
              "$ref": "#/components/schemas/HostStatusContainer"
            },
            "type": "array"
          },
          "diskAvailableOptAiware": {
            "description": "The available bytes in the /opt/aiware partition",
            "format": "int64",
            "type": "integer"
          },
          "diskAvailableRoot": {
            "description": "The available bytes in the root partition",
            "format": "int64",
            "type": "integer"
          },
          "hostID": {
            "format": "uuid",
            "type": "string"
          },
          "memoryAvailable": {
            "description": "The available memory to the container in bytes",
            "format": "int64",
            "type": "integer"
          },
          "memoryUsed": {
            "description": "The memory used by container in bytes",
            "format": "int64",
            "type": "integer"
          },
          "numCPU": {
            "description": "The number of CPU available",
            "type": "integer"
          },
          "numContainers": {
            "description": "The number of containers running",
            "type": "integer"
          },
          "numEngineInstances": {
            "description": "The number of engine instances running",
            "type": "integer"
          },
          "numGPU": {
            "description": "The number of GPU available",
            "type": "integer"
          },
          "vCPUAvailable": {
            "description": "The number of vCPUs available.  THis is calculated by Number of CPUs * % available * 1024",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "HostStatusContainer": {
        "additionalProperties": true,
        "properties": {
          "CPUUtilization": {
            "description": "The CPU of the container as a percentage from 0-100",
            "format": "float",
            "type": "number"
          },
          "diskAvailableRoot": {
            "description": "The available bytes in the root partition",
            "format": "int64",
            "type": "integer"
          },
          "dockerContainerId": {
            "format": "uuid",
            "type": "string"
          },
          "engineID": {
            "format": "uuid",
            "type": "string"
          },
          "engineInstanceID": {
            "format": "uuid",
            "type": "string"
          },
          "launchID": {
            "format": "uuid",
            "type": "string"
          },
          "memoryAvailable": {
            "description": "The available memory to the container in bytes",
            "format": "int64",
            "type": "integer"
          },
          "memoryUsed": {
            "description": "The memory used by container in bytes",
            "format": "int64",
            "type": "integer"
          },
          "numGPU": {
            "description": "The number of GPU attached to the container",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "HostTerminationReasonEnum": {
        "description": "The reason for the termination of the host",
        "enum": [
          "none",
          "controller",
          "expiration",
          "spot",
          "user",
          "hardware",
          "other"
        ],
        "type": "string"
      },
      "JobDetail": {
        "properties": {
          "abortedDateTime": {
            "description": "This is the datetime the task was aborted",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "completedDateTime": {
            "description": "This is the datetime the job was completed",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "coreID": {
            "format": "uuid",
            "type": "string"
          },
          "coreJobID": {
            "description": "Core Job ID",
            "format": "string",
            "type": "string"
          },
          "coreRecordingId": {
            "description": "This is the recording id in the core of the content for this job",
            "format": "int64",
            "type": "integer"
          },
          "coreScheduledJobId": {
            "description": "This is the core scheduled job id.",
            "type": "integer"
          },
          "coreSourceId": {
            "default": 0,
            "description": "This is the Core Source Id",
            "format": "int64",
            "type": "integer"
          },
          "createdDateTime": {
            "description": "This is the datetime the job was created",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "currentRetries": {
            "default": 0,
            "description": "This is the current retries for the job",
            "type": "integer"
          },
          "dueDateTime": {
            "description": "This is the time the job is due to be complete.  This is used by edge to set the priorities.",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "internalJobID": {
            "description": "Internal Job ID",
            "format": "uuid",
            "type": "string"
          },
          "internalOrganizationID": {
            "format": "uuid",
            "type": "string"
          },
          "internalScheduledJobId": {
            "description": "The internal scheduled job id.",
            "type": "string"
          },
          "isTemplate": {
            "description": "If true, this job is a template",
            "type": "boolean"
          },
          "jobConfigJSON": {
            "description": "This is the job config expressed as JSON",
            "format": "JSON",
            "type": "string"
          },
          "jobStatus": {
            "$ref": "#/components/schemas/JobStatusEnum"
          },
          "jobTemplateId": {
            "description": "If set, this job was created from this job template",
            "type": "string"
          },
          "maxRetries": {
            "default": 0,
            "description": "This is the max retries for the job",
            "type": "integer"
          },
          "modifiedDateTime": {
            "description": "This is the datetime the job was last modified.",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "priority": {
            "default": 0,
            "description": "The priority for the job.  Default is 0.",
            "format": "int32",
            "type": "integer"
          },
          "scheduledDateTime": {
            "description": "If from scheduled job, this is the date when the job should be launched. There is sometimes a difference between scheduled and start to allow for the edge to start processing at the right time if warmup is needed. If not, blank",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "startDateTime": {
            "description": "If from scheduled job, this is the date when the job should be started. This is a planning time not the actual whcih is startedDateTime.  If not, blank",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "startedDateTime": {
            "description": "This is the datetime the job was started (actual)",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "stopDateTime": {
            "description": "If from scheduled job, this is the date when the job should be stopped. Start and Stop are used for recording from a stream.  If not, blank",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "taskRoutes": {
            "items": {
              "$ref": "#/components/schemas/TaskRouteDetail"
            },
            "type": "array"
          },
          "tasks": {
            "items": {
              "$ref": "#/components/schemas/TaskDetail"
            },
            "type": "array"
          }
        },
        "required": [
          "internalOrganizationId"
        ],
        "type": "object"
      },
      "JobOutput": {
        "properties": {
          "contents": {
            "description": "The content of the output.",
            "type": "string"
          },
          "contentsValid": {
            "description": "If true, the contents are valid even if empty",
            "type": "boolean"
          },
          "created": {
            "description": "The time the file was created as seconds since Unix epoch in UTC.",
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "description": "The name of the output file",
            "type": "string"
          },
          "size": {
            "description": "The size of the output file in bytes",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "JobOutputs": {
        "properties": {
          "internalJobID": {
            "description": "Internal Job ID",
            "format": "uuid",
            "type": "string"
          },
          "outputs": {
            "items": {
              "$ref": "#/components/schemas/JobOutput"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "JobPerformanceInfo": {
        "properties": {
          "cpu": {
            "description": "CPU Utilization",
            "format": "float",
            "type": "number"
          },
          "dateTime": {
            "example": "2018-03-20T09:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "gpu": {
            "description": "GPU Utilization",
            "format": "float",
            "type": "number"
          },
          "memory": {
            "description": "Memory available in percent",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "JobStatus": {
        "properties": {
          "internalJobID": {
            "description": "Internal Job ID",
            "format": "uuid",
            "type": "string"
          },
          "jobStatus": {
            "$ref": "#/components/schemas/JobStatusEnum"
          }
        },
        "type": "object"
      },
      "JobStatusEnum": {
        "description": "This is the status for the job.  This will be created as 'pending' for new jobs",
        "enum": [
          "scheduled",
          "pending",
          "queued",
          "running",
          "complete",
          "aborted",
          "failed"
        ],
        "type": "string"
      },
      "JobWorkRequest": {
        "properties": {
          "buildID": {
            "format": "uuid",
            "type": "string"
          },
          "completedDateTime": {
            "description": "This is the datetime for completed_date_time in a task",
            "example": "2018-03-20T09:15:28Z",
            "format": "date-time",
            "type": "string"
          },
          "engineCategoryID": {
            "format": "uuid",
            "type": "string"
          },
          "engineID": {
            "format": "uuid",
            "type": "string"
          },
          "engineInstanceID": {
            "format": "uuid",
            "type": "string"
          },
          "engineName": {
            "type": "string"
          },
          "errorCount": {
            "type": "integer"
          },
          "internalJobID": {
            "format": "uuid",
            "type": "string"
          },
          "internalTaskID": {
            "format": "uuid",
            "type": "string"
          },
          "startDateTime": {
            "description": "This is the datetime for start_date_time in a task",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "workRequestID": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "JobsCountsInfo": {
        "example": {
          "count": 0
        },
        "properties": {
          "count": {
            "description": "Total amount of jobs with a particular status",
            "format": "int64",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/JobStatusEnum"
          }
        },
        "type": "object"
      },
      "JobsEnginesCountsInfo": {
        "properties": {
          "count": {
            "description": "Total amount of jobs with a particular status and an engine category",
            "format": "int64",
            "type": "integer"
          },
          "engineCategoryName": {
            "description": "Engine category name",
            "example": "Logo Recognition",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/JobStatusEnum"
          }
        },
        "type": "object"
      },
      "JobsHostsCountsInfo": {
        "properties": {
          "count": {
            "description": "Total amount of jobs with a particular status and a host name",
            "format": "int64",
            "type": "integer"
          },
          "hostName": {
            "description": "Host name",
            "example": "Host1",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/JobStatusEnum"
          }
        },
        "type": "object"
      },
      "JobsOrganizationCountsInfo": {
        "properties": {
          "count": {
            "description": "Total amount of jobs with a particular status and a time range",
            "format": "int64",
            "type": "integer"
          },
          "organizationId": {
            "description": "Id of organization",
            "format": "int64",
            "type": "integer"
          },
          "organizationName": {
            "description": "Name of organization",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/JobStatusEnum"
          }
        },
        "type": "object"
      },
      "JobsTimeRangesCountsInfo": {
        "properties": {
          "count": {
            "description": "Total amount of jobs with a particular status and a time range",
            "format": "int64",
            "type": "integer"
          },
          "endDateTime": {
            "description": "Start of a time range",
            "example": "2018-03-20T10:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "startDateTime": {
            "description": "Start of a time range",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/JobStatusEnum"
          }
        },
        "type": "object"
      },
      "LaunchActionEnum": {
        "enum": [
          "launch",
          "terminate"
        ],
        "type": "string"
      },
      "LaunchJobTemplateRequest": {
        "properties": {
          "isInternal": {
            "description": "Whether to launch the job template within the edge cluster or back to core",
            "type": "boolean"
          },
          "payloadJSON": {
            "description": "This is the payload encoded as a JSON string.  This will be used",
            "format": "json",
            "type": "string"
          },
          "scheduledJobID": {
            "description": "the scheduled job id that started the pipeline involving this template",
            "type": "string"
          },
          "sourceID": {
            "description": "the source Id that associated with the pipeline involving this template",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LaunchJobTemplateResponse": {
        "properties": {
          "operation": {
            "$ref": "#/components/schemas/AdminOperationResponse"
          }
        },
        "type": "object"
      },
      "LaunchStatusEnum": {
        "enum": [
          "pending",
          "running",
          "complete",
          "pending_terminate"
        ],
        "type": "string"
      },
      "LicenseDetail": {
        "description": "This provides the detailed information about the license.",
        "properties": {
          "currentAPI": {
            "description": "The current number of API calls allowed by the license.",
            "format": "int64",
            "type": "integer"
          },
          "currentBytes": {
            "description": "The current number of bytes to be processed under this license.",
            "format": "int64",
            "type": "integer"
          },
          "currentTasks": {
            "description": "The current number of tasks that can be processed on the system.",
            "format": "int64",
            "type": "integer"
          },
          "licenseExpiration": {
            "description": "This is the datetime the license will expire",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "licenseID": {
            "description": "License ID",
            "format": "uuid",
            "type": "string"
          },
          "licenseKey": {
            "description": "This is the encoded license string",
            "type": "string"
          },
          "licenseValidation": {
            "description": "This contains the validation information for the license",
            "type": "string"
          },
          "maxAPI": {
            "description": "The maximum number of API calls allowed by the license. If 0, then unlimited.",
            "format": "int64",
            "type": "integer"
          },
          "maxBytes": {
            "description": "The maximum number of bytes to be processed under this license.  If 0, then unlimited.",
            "format": "int64",
            "type": "integer"
          },
          "maxHosts": {
            "description": "The maximum number of hosts allowed in the system.  If 0, then unlimited.",
            "format": "int64",
            "type": "integer"
          },
          "maxTasks": {
            "description": "The maximum number of tasks that can be processed on the system. If 0, then unlimited.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "OperationSuccess": {
        "description": "If true, the operation was successful.",
        "type": "boolean"
      },
      "OrganizationDetail": {
        "properties": {
          "applicationID": {
            "format": "uuid",
            "type": "string"
          },
          "basePriority": {
            "type": "integer"
          },
          "coreID": {
            "format": "uuid",
            "type": "string"
          },
          "coreOrganizationID": {
            "type": "integer"
          },
          "createdDateTime": {
            "description": "This is the datetime the core was created",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "defaultRetries": {
            "type": "integer"
          },
          "defaultSLASeconds": {
            "type": "integer"
          },
          "kvpJSON": {
            "format": "json",
            "type": "string"
          },
          "modifiedDateTime": {
            "description": "This is the datetime the core was last modified.",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "organizationID": {
            "format": "uuid",
            "type": "string"
          },
          "taskPriorityAdjustmentStarted": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "OrganizationID": {
        "format": "uuid",
        "type": "string"
      },
      "PauseBuildRequest": {
        "properties": {
          "buildID": {
            "format": "uuid",
            "type": "string"
          },
          "engineID": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PauseEngineRequest": {
        "properties": {
          "engineID": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RecheckJobStatusResponse": {
        "properties": {
          "job": {
            "$ref": "#/components/schemas/JobStatus"
          }
        },
        "type": "object"
      },
      "RemoveServersToServerTypeRequest": {
        "properties": {
          "serversToAdd": {
            "description": "The number of servers to remove",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ReplaceEngineRequest": {
        "properties": {
          "engineID": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResumeBuildRequest": {
        "properties": {
          "buildID": {
            "format": "uuid",
            "type": "string"
          },
          "engineID": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResumeEngineRequest": {
        "properties": {
          "engineID": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RunModeEnum": {
        "description": "Run modes for the Host",
        "enum": [
          "engine",
          "nfs",
          "registry",
          "controller",
          "db",
          "standby",
          "all",
          "single",
          "prometheus",
          "api",
          "apps",
          "eventing",
          "automateStudio"
        ],
        "type": "string"
      },
      "ServerProviderEnum": {
        "description": "This selects",
        "enum": [
          "aws_ec2",
          "google_cloud",
          "azure",
          "vmware",
          "none"
        ],
        "type": "string"
      },
      "ServerTypeDetail": {
        "properties": {
          "agentStartupScript": {
            "type": "string"
          },
          "awsAmi": {
            "type": "string"
          },
          "awsInstanceProfile": {
            "type": "string"
          },
          "awsInstanceType": {
            "type": "string"
          },
          "awsKeyName": {
            "type": "string"
          },
          "awsSecurityGroups": {
            "description": "aws subnets",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "awsSpot": {
            "type": "boolean"
          },
          "awsSpotMaxPrice": {
            "format": "float",
            "type": "number"
          },
          "awsSpotPersistent": {
            "type": "boolean"
          },
          "awsSubnets": {
            "description": "aws subnets",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "awsTagsJSON": {
            "format": "json",
            "type": "string"
          },
          "awsUserData": {
            "type": "string"
          },
          "createdDateTime": {
            "description": "This is the datetime the core was created",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "gpuType": {
            "$ref": "#/components/schemas/GPUEnum"
          },
          "hasGPU": {
            "type": "boolean"
          },
          "isAutoScaleActive": {
            "type": "boolean"
          },
          "maxServers": {
            "format": "int64",
            "type": "integer"
          },
          "memoryBytes": {
            "format": "int64",
            "type": "integer"
          },
          "minServers": {
            "format": "int64",
            "type": "integer"
          },
          "modifiedDateTime": {
            "description": "This is the datetime the core was last modified.",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "numGPU": {
            "format": "int64",
            "type": "integer"
          },
          "onlyOrganizationId": {
            "format": "uuid",
            "type": "string"
          },
          "runModes": {
            "description": "run modes",
            "items": {
              "$ref": "#/components/schemas/RunModeEnum"
            },
            "type": "array"
          },
          "serverConfigJSON": {
            "format": "json",
            "type": "string"
          },
          "serverProvider": {
            "$ref": "#/components/schemas/ServerProviderEnum"
          },
          "serverTypeID": {
            "format": "uuid",
            "type": "string"
          },
          "vcpus": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SortOrderEnum": {
        "enum": [
          "asc",
          "desc"
        ],
        "type": "string"
      },
      "StatusFormatEnum": {
        "enum": [
          "json",
          "html",
          "txt",
          "csv"
        ],
        "type": "string"
      },
      "TaskDetail": {
        "properties": {
          "abortedDateTime": {
            "description": "This is the datetime the task was aborted",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "buildID": {
            "format": "uuid",
            "type": "string"
          },
          "childTaskIDs": {
            "description": "Array of Internal Child Task Id",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "completedDateTime": {
            "description": "This is the datetime the task was completed",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "coreJobID": {
            "description": "This is the core job id associated with this job",
            "type": "string"
          },
          "coreRecordingID": {
            "description": "This is the recording id in the core of the content for this job",
            "format": "int64",
            "type": "integer"
          },
          "coreTaskID": {
            "description": "This is the core task id associated with this job",
            "type": "string"
          },
          "createdDateTime": {
            "description": "This is the datetime the core was created",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "currentRetries": {
            "default": 0,
            "description": "This is the current retries for the task",
            "type": "integer"
          },
          "dueDateTime": {
            "description": "This is the time the task is due to be complete.  This is used by edge to set the priorities.",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "engineCategoryID": {
            "description": "Category Id",
            "format": "uuid",
            "type": "string"
          },
          "engineCategoryName": {
            "description": "Category name",
            "example": "Transcription",
            "type": "string"
          },
          "engineID": {
            "format": "uuid",
            "type": "string"
          },
          "engineName": {
            "description": "Engine name",
            "example": "Speechmatic en - V3F",
            "type": "string"
          },
          "errorCount": {
            "description": "This is the error count for the task",
            "type": "integer"
          },
          "failureDetail": {
            "description": "If there is an error, the detail will be set here.",
            "type": "string"
          },
          "failureReason": {
            "$ref": "#/components/schemas/FailureReasonEnum"
          },
          "internalJobID": {
            "description": "Internal Job ID",
            "format": "uuid",
            "type": "string"
          },
          "internalOrganizationID": {
            "format": "uuid",
            "type": "string"
          },
          "internalTaskID": {
            "description": "Internal Task ID",
            "format": "uuid",
            "type": "string"
          },
          "ioFolders": {
            "items": {
              "$ref": "#/components/schemas/TaskIOInfo"
            },
            "type": "array"
          },
          "isTemplate": {
            "description": "If true, this job is a template",
            "type": "boolean"
          },
          "maxEngines": {
            "description": "The maximum number of engine instances to run against this task.  Defaults to 1 if parallelProcessing is false, or 2 otherwise.",
            "type": "integer"
          },
          "maxRetries": {
            "default": null,
            "description": "This is the max retries for the task",
            "type": "integer"
          },
          "modifiedDateTime": {
            "description": "This is the datetime the core was last modified.",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "parallelProcessing": {
            "description": "If true, multiple engine instances can process this task in parallel.  If false, maxEngines will be 1.",
            "type": "boolean"
          },
          "parentMustBeCompleteBeforeStarting": {
            "description": "If true, this task won't start until the parent is complete",
            "type": "boolean"
          },
          "parentTaskID": {
            "description": "Internal Parent Task Id",
            "format": "uuid",
            "type": "string"
          },
          "payloadJSON": {
            "description": "This is the payload encoded as a JSON string",
            "format": "json",
            "type": "string"
          },
          "scheduledDateTime": {
            "description": "If from scheduled job, this is the date when the task should be launched. There is sometimes a difference between scheduled and start to allow for the edge to start processing at the right time if warmup is needed. If not, blank",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "startDateTime": {
            "description": "If from scheduled job, this is the date when the task should be started. This is a planning time not the actual which is startedDateTime.  If not, blank",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "startedDateTime": {
            "description": "This is the datetime the task was started (actual)",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "stopDateTime": {
            "description": "If from scheduled job, this is the date when the task should be stopped. Start and Stop are used for recording from a stream.  If not, blank",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "taskOutputSON": {
            "description": "This is the taskOutput as a JSON string",
            "format": "json",
            "type": "string"
          },
          "taskPayloadJSON": {
            "description": "This is the taskPayload as a JSON string",
            "format": "json",
            "type": "string"
          },
          "taskStatus": {
            "$ref": "#/components/schemas/JobStatusEnum"
          },
          "taskTemplateID": {
            "description": "If set, this task was created from this task template.",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "engineId"
        ],
        "type": "object"
      },
      "TaskIO": {
        "additionalProperties": true,
        "description": "An input or output folder.  For type output, all fields required. For type input, only id is required.",
        "properties": {
          "id": {
            "description": "The io id",
            "type": "string"
          },
          "inputFolders": {
            "description": "For each output, link into the input(s) folders.",
            "items": {
              "$ref": "#/components/schemas/TaskIOFolder"
            },
            "minItems": 1,
            "type": "array"
          },
          "ioMode": {
            "$ref": "#/components/schemas/TaskIOModeEnum"
          },
          "ioType": {
            "$ref": "#/components/schemas/TaskIOTypeEnum"
          },
          "options": {
            "description": "Options for generating the output, e.g. frame rates, output media format etc.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "TaskIOFolder": {
        "properties": {
          "id": {
            "description": "IO ID",
            "format": "uuid",
            "type": "string"
          },
          "taskId": {
            "description": "The task id containing the io folder",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TaskIOInfo": {
        "description": "This is the task IO Object that provides paramenters for the input and output",
        "properties": {
          "correlationId": {
            "description": "On create, this field will be used to look up task routes for binding.",
            "type": "string"
          },
          "createdDateTime": {
            "description": "This is the datetime the task was created",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "This is the IO Id.  On create, this is not set.",
            "format": "uuid",
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/TaskIOModeEnum"
          },
          "modifiedDateTime": {
            "description": "This is the datetime the task was last modified.",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "optionsJSON": {
            "description": "Any options for this input or output folder for the task to use on processing",
            "format": "json",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/TaskIOTypeEnum"
          }
        },
        "type": "object"
      },
      "TaskIOModeEnum": {
        "enum": [
          "stream",
          "chunk"
        ],
        "type": "string"
      },
      "TaskIOStatus": {
        "additionalProperties": true,
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "processedCount": {
            "description": "Count processed since last status update",
            "type": "integer"
          },
          "processedTotalCount": {
            "description": "Total count processed since start of task",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TaskIOTypeEnum": {
        "enum": [
          "input",
          "output"
        ],
        "type": "string"
      },
      "TaskOutput": {
        "properties": {
          "contents": {
            "description": "The content of the output.",
            "type": "string"
          },
          "contentsValid": {
            "description": "If true, the contents are valid even if empty",
            "type": "boolean"
          },
          "created": {
            "description": "The time the file was created as seconds since Unix epoch in UTC.",
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "description": "The name of the output file",
            "type": "string"
          },
          "size": {
            "description": "The size of the output file in bytes",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TaskOutputs": {
        "properties": {
          "internalTaskID": {
            "description": "Internal Task ID",
            "format": "uuid",
            "type": "string"
          },
          "outputs": {
            "items": {
              "$ref": "#/components/schemas/TaskOutput"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TaskRouteDetail": {
        "properties": {
          "endpoint": {
            "description": "This is endpoint to be used for this route.  This does not have to be unique.",
            "format": "uuid",
            "type": "string"
          },
          "firstWriteDateTime": {
            "description": "This is the datetime the the first byte or chunk was written",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "lastWriteDateTime": {
            "description": "This is the datetime the the last byte or chunk was  written",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "taskChildId": {
            "description": "This is the task child id.  On create, this is the taskCorrelationId",
            "type": "string"
          },
          "taskChildInputCount": {
            "description": "This is the count of bytes or chunks available to the child.",
            "type": "integer"
          },
          "taskChildInputId": {
            "description": "This is the task child input id.  On create, this is the correlationId for the input IO Folder",
            "type": "string"
          },
          "taskChildInputRemainingCount": {
            "description": "This is the count of bytes or chunks remaining to the child.",
            "type": "integer"
          },
          "taskChildNumEngines": {
            "description": "This is the number of engine instances running against this task.",
            "type": "integer"
          },
          "taskParentId": {
            "description": "This is the task parent id.  On create, this is the taskCorrelationId",
            "type": "string"
          },
          "taskParentOutputCount": {
            "description": "This is the count of bytes or chunks produced by the parent.",
            "type": "integer"
          },
          "taskParentOutputId": {
            "description": "This is the task parent output id.  On create, this is the correlationId for the output IO Folder",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TaskStatusDetail": {
        "description": "Represent a task status as being worked on by an engine instance.  This can be sent as part of heartbeat status update or when getting new work. The updates are deltas since last post",
        "properties": {
          "engineID": {
            "format": "uuid",
            "type": "string"
          },
          "errorCount": {
            "description": "How many errors since last error update",
            "type": "integer"
          },
          "errorDetails": {
            "description": "JSON string containing an array of JSON Object to describe indvidiual errors e.g. [{\"id\":\"xxx\", \"msg\":\"xxx\"},..]",
            "type": "string"
          },
          "failureReason": {
            "$ref": "#/components/schemas/FailureReasonEnum"
          },
          "inputs": {
            "items": {
              "$ref": "#/components/schemas/TaskIOStatus"
            },
            "type": "array"
          },
          "internalJobID": {
            "description": "Internal Job ID",
            "format": "uuid",
            "type": "string"
          },
          "internalTaskID": {
            "description": "Internal Task ID",
            "format": "uuid",
            "type": "string"
          },
          "outputs": {
            "items": {
              "$ref": "#/components/schemas/TaskIOStatus"
            },
            "type": "array"
          },
          "priorTimestamp": {
            "description": "UTC Timestamp of last status update or start of new task",
            "format": "int64",
            "type": "integer"
          },
          "retryCount": {
            "description": "How many retries since last status update",
            "type": "integer"
          },
          "taskOutput": {
            "description": "available at the end of a batch, when getting the next batch to work, or last heartbeat before exiting. May not present in heartbeat update",
            "type": "object"
          },
          "taskRouteID": {
            "description": "the task route associated with this work item",
            "type": "string"
          },
          "taskStatus": {
            "$ref": "#/components/schemas/JobStatusEnum",
            "description": "status of task.  For stream engines, the taskStatus can be `complete`.  For chunk engines, the status should remain `running` and let controller calculate the real task status."
          },
          "timestamp": {
            "description": "UTC Timestamp of NOW()",
            "format": "int64",
            "type": "integer"
          },
          "workRequestID": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TaskStatusEnum": {
        "description": "This is the status for the task.  This will be created as 'pending' for new task",
        "enum": [
          "pending",
          "queued",
          "aborted",
          "failed",
          "complete",
          "running",
          "scheduled"
        ],
        "type": "string"
      },
      "TasksCountsInfo": {
        "example": {
          "count": 0
        },
        "properties": {
          "count": {
            "description": "Total amount of tasks with a particular status",
            "format": "int64",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatusEnum"
          }
        },
        "type": "object"
      },
      "TasksEnginesCountsInfo": {
        "example": {
          "count": 0,
          "engineCategoryName": "Logo Recognition"
        },
        "properties": {
          "count": {
            "description": "Total amount of tasks with a particular status and an engine category",
            "format": "int64",
            "type": "integer"
          },
          "engineCategoryName": {
            "description": "Engine category name",
            "example": "Logo Recognition",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatusEnum"
          }
        },
        "type": "object"
      },
      "TasksHostsCountsInfo": {
        "example": {
          "count": 0,
          "engineCategoryName": "Translation",
          "hostName": "Host1"
        },
        "properties": {
          "count": {
            "description": "Total amount of tasks with a particular status and a host name",
            "format": "int64",
            "type": "integer"
          },
          "engineCategoryName": {
            "description": "Engine category name",
            "example": "Translation",
            "type": "string"
          },
          "hostName": {
            "description": "Host name",
            "example": "Host1",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TasksTimeRangesCountsInfo": {
        "example": {
          "count": 0,
          "endDateTime": "2018-03-20T10:12:28.000Z",
          "startDateTime": "2018-03-20T09:12:28.000Z"
        },
        "properties": {
          "count": {
            "description": "Total amount of tasks with a particular status and a time range",
            "format": "int64",
            "type": "integer"
          },
          "endDateTime": {
            "description": "Start of a time range",
            "example": "2018-03-20T10:12:28.000Z",
            "format": "date-time",
            "type": "string"
          },
          "startDateTime": {
            "description": "Start of a time range",
            "example": "2018-03-20T09:12:28.000Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatusEnum"
          }
        },
        "type": "object"
      },
      "TerminateHostRequest": {
        "properties": {
          "detail": {
            "type": "string"
          },
          "reason": {
            "$ref": "#/components/schemas/HostTerminationReasonEnum"
          }
        },
        "type": "object"
      },
      "TokenDetail": {
        "properties": {
          "apiRateLimitHour": {
            "format": "int64",
            "type": "integer"
          },
          "bytesRateLimitHour": {
            "format": "int64",
            "type": "integer"
          },
          "createdDateTime": {
            "description": "This is the datetime the core was created",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "engineInstanceID": {
            "format": "uuid",
            "type": "string"
          },
          "expiration": {
            "description": "This is the datetime the core was created",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "hostID": {
            "format": "uuid",
            "type": "string"
          },
          "kvpJSON": {
            "format": "json",
            "type": "string"
          },
          "maxAPI": {
            "format": "int64",
            "type": "integer"
          },
          "maxBytes": {
            "format": "int64",
            "type": "integer"
          },
          "maxTasks": {
            "format": "int64",
            "type": "integer"
          },
          "modifiedDateTime": {
            "description": "This is the datetime the core was last modified.",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "organizationIDs": {
            "items": {
              "$ref": "#/components/schemas/OrganizationID"
            },
            "type": "array"
          },
          "taskRateLimitHour": {
            "format": "int64",
            "type": "integer"
          },
          "tokenID": {
            "format": "uuid",
            "type": "string"
          },
          "totalCountAPI": {
            "format": "int64",
            "type": "integer"
          },
          "totalCountBytes": {
            "format": "int64",
            "type": "integer"
          },
          "totalCountTasks": {
            "format": "int64",
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/TokenTypeEnum"
          }
        },
        "type": "object"
      },
      "TokenTypeEnum": {
        "enum": [
          "engine_instance",
          "host",
          "api",
          "user"
        ],
        "type": "string"
      },
      "UpdateBuildResponse": {
        "properties": {
          "result": {
            "$ref": "#/components/schemas/BuildDetail"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "UpdateEngineCategoryResponse": {
        "properties": {
          "result": {
            "$ref": "#/components/schemas/EngineCategoryDetail"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "UpdateEngineResponse": {
        "properties": {
          "result": {
            "$ref": "#/components/schemas/EngineDetail"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "UpdateServerTypeResponse": {
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ServerTypeDetail"
          },
          "success": {
            "$ref": "#/components/schemas/OperationSuccess"
          }
        },
        "type": "object"
      },
      "UserDetail": {
        "properties": {
          "createdBy": {
            "format": "uuid",
            "type": "string"
          },
          "createdDateTime": {
            "description": "This is the datetime the core was created",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "datePasswordLastUpdated": {
            "description": "This is the datetime the password was last updated",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "internalOrganizationID": {
            "format": "uuid",
            "type": "string"
          },
          "kvpJSON": {
            "format": "json",
            "type": "string"
          },
          "lastLoggedIn": {
            "description": "This is the datetime the user last logged in",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "modifiedBy": {
            "format": "uuid",
            "type": "string"
          },
          "modifiedDateTime": {
            "description": "This is the datetime the core was last modified.",
            "example": "2018-03-20T09:12:28Z",
            "format": "date-time",
            "type": "string"
          },
          "passwordChangeRequired": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/UserStatusEnum"
          },
          "userID": {
            "format": "uuid",
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "userSettingsJSON": {
            "format": "json",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserStatusEnum": {
        "description": "Flag denoting user status.  Trial users will be deactived in the future or converted.  Inactive users can't login.  Deleted users are soft deleted.",
        "enum": [
          "active",
          "trial",
          "inactive",
          "deleted"
        ],
        "type": "string"
      },
      "WorkRequestStatusEnum": {
        "description": "The final status of the last work request",
        "enum": [
          "complete",
          "failed",
          "pending",
          "running",
          "timeout"
        ],
        "type": "string"
      }
    },
    "securitySchemes": {
      "api_key": {
        "in": "header",
        "name": "api_key",
        "type": "apiKey"
      }
    }
  },
  "externalDocs": {
    "description": "aiWARE Documentation",
    "url": "https://docs.veritone.com/"
  },
  "info": {
    "contact": {
      "email": "api@aiware.com"
    },
    "description": "This is the aiWARE Edge API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "https://aiware.com/terms/",
    "title": "aiWARE Edge API",
    "version": "1.0.3"
  },
  "openapi": "3.0.1",
  "paths": {
    "/admin/config": {
      "get": {
        "operationId": "getConfig",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminConfigResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This provides all the config for the cluster",
        "tags": [
          "admin"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "updateConfigAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminConfigUpdateRequest"
              }
            }
          },
          "description": "Config Update for core",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminConfigUpdateResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This gets the config for the cluster",
        "tags": [
          "admin"
        ]
      }
    },
    "/admin/config/{ConfigSection}": {
      "get": {
        "operationId": "getConfigSection",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminConfigSectionResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This provides all the config for the cluster",
        "tags": [
          "admin"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/ConfigSection"
        }
      ],
      "post": {
        "operationId": "updateConfigSection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminConfigUpdateSectionRequest"
              }
            }
          },
          "description": "The input for createConfigSection",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminConfigUpdateSectionResponse"
                }
              },
              "text/csv": {
                "schema": {
                  "example": "....",
                  "type": "string"
                }
              },
              "text/html": {
                "schema": {
                  "example": "....",
                  "type": "string"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "....",
                  "type": "string"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This gets the config for the cluster",
        "tags": [
          "admin"
        ]
      }
    },
    "/admin/config/{ConfigSection}/{ConfigKey}": {
      "get": {
        "operationId": "getConfigSectionKey",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminConfigSectionKeyResponse"
                }
              },
              "text/csv": {
                "schema": {
                  "example": "....",
                  "type": "string"
                }
              },
              "text/html": {
                "schema": {
                  "example": "....",
                  "type": "string"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "....",
                  "type": "string"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This provides a config section key for the cluster",
        "tags": [
          "admin"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/ConfigSection"
        },
        {
          "$ref": "#/components/parameters/ConfigKey"
        }
      ],
      "post": {
        "operationId": "updateConfigSectionKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminConfigUpdateSectionKeyRequest"
              }
            }
          },
          "description": "The input for createSectionKey",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminConfigUpdateSectionKeyResponse"
                }
              },
              "text/csv": {
                "schema": {
                  "example": "....",
                  "type": "string"
                }
              },
              "text/html": {
                "schema": {
                  "example": "....",
                  "type": "string"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "....",
                  "type": "string"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This updates the config for the cluster for a given key",
        "tags": [
          "admin"
        ]
      }
    },
    "/admin/core/{CoreID}/detail": {
      "get": {
        "operationId": "getAdminCoreDetail",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminCoreGetDetailResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This provides information on the given core.",
        "tags": [
          "admin"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/CoreID"
        }
      ]
    },
    "/admin/cores": {
      "get": {
        "operationId": "getAdminCores",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCoresResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This provides a list of core systems",
        "tags": [
          "admin"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/admin/cores/create": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "createAdminCore",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminCoreCreateRequest"
              }
            }
          },
          "description": "The input for createCor",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminCoreCreateResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This creates a new core",
        "tags": [
          "admin"
        ]
      }
    },
    "/admin/licenses": {
      "get": {
        "operationId": "get_licenses",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLicensesResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This provides a licenses on the system",
        "tags": [
          "admin"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/admin/licenses/apply": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "apply_license",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLicenseDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDetail"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This applies a license to aiWARE",
        "tags": [
          "admin"
        ]
      }
    },
    "/admin/licenses/{LicenseID}/delete": {
      "delete": {
        "operationId": "delete_license",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOperationResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This deletes a license from aiWARE",
        "tags": [
          "admin"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/LicenseID"
        }
      ]
    },
    "/admin/licenses/{LicenseID}/detail": {
      "get": {
        "operationId": "get_license_detail",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDetail"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This gets detail on a license key",
        "tags": [
          "admin"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/LicenseID"
        }
      ]
    },
    "/admin/organization/{OrganizationID}/detail": {
      "get": {
        "operationId": "getAdminOrganizationDetail",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrganizationGetDetailResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This updates the config for the cluster for a given key",
        "tags": [
          "admin"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/OrganizationID"
        }
      ]
    },
    "/admin/organization/{OrganizationID}/tokens": {
      "get": {
        "operationId": "getAdminOrganizationTokens",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrganizationGetTokensResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This provides information on the given organization tokens.",
        "tags": [
          "admin"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/OrganizationID"
        }
      ]
    },
    "/admin/organizations": {
      "get": {
        "operationId": "getAdminOrganizations",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrganizationsGetResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This provides a list of organizations",
        "tags": [
          "admin"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/admin/organizations/create": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "createAdminOrganization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminOrganizationCreateRequest"
              }
            }
          },
          "description": "The input for createOrganization",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrganizationCreateResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This updates the config for the cluster for a given key",
        "tags": [
          "admin"
        ]
      }
    },
    "/admin/server_type/{ServerTypeID}/add": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/ServerTypeID_Path_Required"
        }
      ],
      "post": {
        "operationId": "addservers_server_type",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddServersToServerTypeRequest"
              }
            }
          },
          "description": "Add Servers Server Type"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOperationResponse"
                }
              }
            },
            "description": "List of engines",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This API add servers to the specified server type",
        "tags": [
          "admin"
        ]
      }
    },
    "/admin/server_type/{ServerTypeID}/delete": {
      "delete": {
        "operationId": "delete_server_type",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOperationResponse"
                }
              }
            },
            "description": "Delete a particular server type",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This API deletes the specified server type",
        "tags": [
          "admin"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/ServerTypeID_Path_Required"
        }
      ],
      "post": {
        "operationId": "delete_server_type_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteServerTypeRequest"
              }
            }
          },
          "description": "Engine Instance Info"
        },
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOperationResponse"
                }
              }
            },
            "description": "Delete a particular engine",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This API deletes the specified server type",
        "tags": [
          "admin"
        ]
      }
    },
    "/admin/server_type/{ServerTypeID}/desired": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/ServerTypeID_Path_Required"
        }
      ],
      "post": {
        "operationId": "desiredservers_server_type",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DesiredServersToServerTypeRequest"
              }
            }
          },
          "description": "Set Servers for Server Type"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOperationResponse"
                }
              }
            },
            "description": "Response to operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This API add servers to the specified server type",
        "tags": [
          "admin"
        ]
      }
    },
    "/admin/server_type/{ServerTypeID}/detail": {
      "get": {
        "operationId": "get_server_type",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetServerTypeResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This provides detail on the server type",
        "tags": [
          "admin"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/ServerTypeID_Path_Required"
        }
      ]
    },
    "/admin/server_type/{ServerTypeID}/remove": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/ServerTypeID_Path_Required"
        }
      ],
      "post": {
        "operationId": "removeservers_server_type",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveServersToServerTypeRequest"
              }
            }
          },
          "description": "Update Server Type"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOperationResponse"
                }
              }
            },
            "description": "List of engines",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This API removes servers from the specified server type",
        "tags": [
          "admin"
        ]
      }
    },
    "/admin/server_type/{ServerTypeID}/update": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/ServerTypeID_Path_Required"
        }
      ],
      "post": {
        "operationId": "update_server_type",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerTypeDetail"
              }
            }
          },
          "description": "Update Server Type"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateServerTypeResponse"
                }
              }
            },
            "description": "List of engines",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This API updates the specified server type",
        "tags": [
          "admin"
        ]
      }
    },
    "/admin/server_types": {
      "get": {
        "operationId": "get_server_types",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetServerTypesResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This lists the server types available on the system",
        "tags": [
          "admin"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/admin/server_types/create": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "create_server_type",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServerTypeRequest"
              }
            }
          },
          "description": "The input for createServerType",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateServerTypeResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This creates a new server type",
        "tags": [
          "admin"
        ]
      }
    },
    "/admin/status": {
      "get": {
        "operationId": "get_admin_status",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineInstanceInfo"
                }
              },
              "text/csv": {
                "schema": {
                  "example": "....",
                  "type": "string"
                }
              },
              "text/html": {
                "schema": {
                  "example": "....",
                  "type": "string"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "....",
                  "type": "string"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This provides information on the status of the aiWARE edge",
        "tags": [
          "admin"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/StatusFormat"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/admin/terminate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "adminTerminateCluster",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminOperationRequest"
              }
            }
          },
          "description": "ClusterID"
        },
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This terminates the cluster",
        "tags": [
          "admin"
        ]
      }
    },
    "/admin/tokens/create": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "create_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminTokenCreateRequest"
              }
            }
          },
          "description": "The input for createToken",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminTokenCreateResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This creates a new token",
        "tags": [
          "admin"
        ]
      }
    },
    "/admin/user/{UserID}/detail": {
      "get": {
        "operationId": "getAdminUserDetail",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserGetDetailResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This provides information on the given user.",
        "tags": [
          "admin"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/UserID"
        }
      ]
    },
    "/admin/user/{UserID}/tokens": {
      "get": {
        "operationId": "getAdminUserTokens",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserGetTokensResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This provides information on the given user.",
        "tags": [
          "admin"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/UserID"
        }
      ]
    },
    "/admin/users": {
      "get": {
        "operationId": "getAdminUsers",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUsersGetResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This provides a list of users in the system",
        "tags": [
          "admin"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "description": "the number of users to skip before getting the result set",
          "in": "query",
          "name": "offset",
          "schema": {
            "type": "integer"
          }
        },
        {
          "description": "the number of users to return.",
          "in": "query",
          "name": "limit",
          "schema": {
            "default": 100,
            "type": "integer"
          }
        },
        {
          "description": "the field to sort",
          "in": "query",
          "name": "orderBy",
          "schema": {
            "default": "created_date_time",
            "type": "string"
          }
        },
        {
          "description": "the sort order",
          "in": "query",
          "name": "direction",
          "schema": {
            "default": "DESC",
            "type": "string"
          }
        },
        {
          "description": "the value should be in [active, trial, inactive, deleted]",
          "in": "query",
          "name": "status",
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Name of user",
          "in": "query",
          "name": "name",
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "userName of user",
          "in": "query",
          "name": "userName",
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "email of user",
          "in": "query",
          "name": "email",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/admin/users/create": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "create_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUserCreateRequest"
              }
            }
          },
          "description": "The input for createUser",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserCreateResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This creates a new user",
        "tags": [
          "admin"
        ]
      }
    },
    "/admin/users/login": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "login_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUserLoginRequest"
              }
            }
          },
          "description": "This logs in the user"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserLoginResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This logs a user in if successful",
        "tags": [
          "admin"
        ]
      }
    },
    "/engine/categories": {
      "get": {
        "operationId": "get_engine_categories",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEngineCategoriesResponse"
                }
              }
            },
            "description": "Result of get_engine_categories",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This provides a list of engine categories",
        "tags": [
          "engine"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/engine/category/create": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "create_engine_category",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEngineCategoryDetail"
              }
            }
          },
          "description": "The fields for an engine category",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateEngineCategoryResponse"
                }
              }
            },
            "description": "Result of the Create Engine Category API",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This API creates a new engine category",
        "tags": [
          "engine"
        ]
      }
    },
    "/engine/category/{EngineCategoryID}/detail": {
      "get": {
        "operationId": "get_engine_category_detail",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEngineCategoryDetailResponse"
                }
              }
            },
            "description": "Result of get_engine_category_detail",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This provides detail for an engine category",
        "tags": [
          "engine"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/EngineCategoryID"
        }
      ]
    },
    "/engine/category/{EngineCategoryID}/update": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/EngineCategoryID"
        }
      ],
      "post": {
        "operationId": "update_engine_category",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateEngineCategoryResponse"
                }
              }
            },
            "description": "This updates the specified engine category",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This updates the specified engine category",
        "tags": [
          "engine"
        ]
      }
    },
    "/engine/create": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "create_engine",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEngineRequest"
              }
            }
          },
          "description": "The fields for an engine",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateEngineResponse"
                }
              }
            },
            "description": "Result of the Create Engine API",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This API creates a new engine",
        "tags": [
          "engine"
        ]
      }
    },
    "/engine/instance/{EngineInstanceID}/detail": {
      "get": {
        "operationId": "get_engine_instance_detail",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineInstanceInfo"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "Get information about an engine Instance",
        "tags": [
          "engine"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/EngineInstanceID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/engine/instance/{EngineInstanceID}/logs": {
      "get": {
        "operationId": "getEngineInstanceLogs",
        "responses": {
          "200": {
            "content": {
              "application/zip": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "Get engine instance logs as a zip file",
        "tags": [
          "engine"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/EngineInstanceID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/engine/instance/{EngineInstanceID}/status": {
      "get": {
        "operationId": "get_engine_instance_status",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineInstanceStatus"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "Get the latest status of the engine instance",
        "tags": [
          "engine"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/EngineInstanceID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/engine/instance/{EngineInstanceID}/workdetail": {
      "get": {
        "operationId": "get_engine_instance_work_detail",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineInstanceWorkDetailsResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "Get detail of the work being done by the engine instance",
        "tags": [
          "engine"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/EngineInstanceID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/engine/register": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "registerEngineInstanceNoAuth",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineInstanceInfo"
              }
            }
          },
          "description": "Engine Instance Info",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineInstanceRegistrationInfo"
                }
              }
            },
            "description": "Successful registration of Engine Instance",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "summary": "Register a new engine instance without authorization",
        "tags": [
          "engine"
        ]
      }
    },
    "/engine/{EngineID}/build/{BuildID}": {
      "get": {
        "operationId": "get_engine_build",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEngineBuildResponse"
                }
              }
            },
            "description": "Specific build",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This gets a particular build",
        "tags": [
          "engine"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/EngineID_Path_Required"
        },
        {
          "$ref": "#/components/parameters/BuildID_Path_Required"
        }
      ]
    },
    "/engine/{EngineID}/build/{BuildID}/delete": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/EngineID_Path_Required"
        },
        {
          "$ref": "#/components/parameters/BuildID_Path_Required"
        }
      ],
      "post": {
        "operationId": "delete_build_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteBuildRequest"
              }
            }
          },
          "description": "This deleted a particular build"
        },
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOperationResponse"
                }
              }
            },
            "description": "Delete a particular engine",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This API provides the engine detail result",
        "tags": [
          "engine"
        ]
      }
    },
    "/engine/{EngineID}/build/{BuildID}/pause": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/EngineID_Path_Required"
        },
        {
          "$ref": "#/components/parameters/BuildID_Path_Required"
        },
        {
          "$ref": "#/components/parameters/BuildState_Query_Optional"
        }
      ],
      "post": {
        "operationId": "pause_build",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PauseBuildRequest"
              }
            }
          },
          "description": "The fields for an engine"
        },
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOperationResponse"
                }
              }
            },
            "description": "Pause a particular build",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This API pauses a build so that tasks based on this engine build will not run.",
        "tags": [
          "engine"
        ]
      }
    },
    "/engine/{EngineID}/build/{BuildID}/resume": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/EngineID_Path_Required"
        },
        {
          "$ref": "#/components/parameters/BuildID_Path_Required"
        }
      ],
      "post": {
        "operationId": "resume_build",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResumeBuildRequest"
              }
            }
          },
          "description": "Resume Build"
        },
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOperationResponse"
                }
              }
            },
            "description": "Resume a particular build",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This API resumes a build so that tasks based on this engine build will start running.",
        "tags": [
          "engine"
        ]
      }
    },
    "/engine/{EngineID}/build/{BuildID}/update": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/EngineID_Path_Required"
        },
        {
          "$ref": "#/components/parameters/BuildID_Path_Required"
        }
      ],
      "post": {
        "operationId": "update_engine_build",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildDetail"
              }
            }
          },
          "description": "Update Engine BUild",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBuildResponse"
                }
              }
            },
            "description": "List of engines",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This API updates the specified engine",
        "tags": [
          "engine"
        ]
      }
    },
    "/engine/{EngineID}/builds": {
      "get": {
        "operationId": "get_engine_builds",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEngineBuildsResponse"
                }
              }
            },
            "description": "List of engines",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "Get the list of builds deployed and available on aiWARE for a particular engine",
        "tags": [
          "engine"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/EngineID_Path_Required"
        },
        {
          "$ref": "#/components/parameters/BuildState_Query_Optional"
        }
      ]
    },
    "/engine/{EngineID}/delete": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/EngineID_Path_Required"
        }
      ],
      "post": {
        "operationId": "delete_engine_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteEngineRequest"
              }
            }
          },
          "description": "Engine Instance Info"
        },
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOperationResponse"
                }
              }
            },
            "description": "Delete a particular engine",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This API provides the engine detail result",
        "tags": [
          "engine"
        ]
      }
    },
    "/engine/{EngineID}/detail": {
      "get": {
        "operationId": "get_engine_detail",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEngineDetailResponse"
                }
              }
            },
            "description": "List of engines",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This API provides the engine detail result",
        "tags": [
          "engine"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/EngineID_Path_Required"
        }
      ]
    },
    "/engine/{EngineID}/launch/{LaunchID}/detail": {
      "get": {
        "operationId": "get_engine_launch_detail",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEngineLaunchResponse"
                }
              }
            },
            "description": "Returns detail on a specific launch",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This API returns the list of launches for this engine",
        "tags": [
          "engine"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/EngineID_Path_Required"
        },
        {
          "$ref": "#/components/parameters/LaunchID_Path_Required"
        },
        {
          "$ref": "#/components/parameters/CreatedBefore_Query_Optional"
        },
        {
          "$ref": "#/components/parameters/CreatedAfter_Query_Optional"
        },
        {
          "$ref": "#/components/parameters/Limit_Query_Optional"
        },
        {
          "$ref": "#/components/parameters/Skip_Query_Optional"
        },
        {
          "$ref": "#/components/parameters/Sort_Query_Optional"
        },
        {
          "$ref": "#/components/parameters/SortOrder_Query_Optional"
        }
      ]
    },
    "/engine/{EngineID}/launches": {
      "get": {
        "operationId": "get_engine_launches",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEngineLaunchResponse"
                }
              }
            },
            "description": "List of launches for specified engine",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This API returns the list of launches for this engine",
        "tags": [
          "engine"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/EngineID_Path_Required"
        },
        {
          "$ref": "#/components/parameters/LaunchStatus_Query_Optional"
        },
        {
          "$ref": "#/components/parameters/LaunchAction_Query_Optional"
        },
        {
          "$ref": "#/components/parameters/CreatedBefore_Query_Optional"
        },
        {
          "$ref": "#/components/parameters/CreatedAfter_Query_Optional"
        },
        {
          "$ref": "#/components/parameters/Limit_Query_Optional"
        },
        {
          "$ref": "#/components/parameters/Skip_Query_Optional"
        },
        {
          "$ref": "#/components/parameters/Sort_Query_Optional"
        },
        {
          "$ref": "#/components/parameters/SortOrder_Query_Optional"
        }
      ]
    },
    "/engine/{EngineID}/pause": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/EngineID_Path_Required"
        }
      ],
      "post": {
        "operationId": "pause_engine",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PauseEngineRequest"
              }
            }
          },
          "description": "Engine Instance Info"
        },
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOperationResponse"
                }
              }
            },
            "description": "Pause a particular engine",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This API pauses an engine so that tasks based on this engine will not run.",
        "tags": [
          "engine"
        ]
      }
    },
    "/engine/{EngineID}/replace": {
      "parameters": [
        {
          "$ref": "#/components/parameters/EngineID_Path_Required"
        }
      ],
      "post": {
        "operationId": "replace_engine",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceEngineRequest"
              }
            }
          },
          "description": "Engine Instance Info"
        },
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOperationResponse"
                }
              }
            },
            "description": "Pause a particular engine",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This API replaced an engine so that tasks based on this engine will not run.",
        "tags": [
          "engine"
        ]
      }
    },
    "/engine/{EngineID}/resume": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/EngineID_Path_Required"
        }
      ],
      "post": {
        "operationId": "resume_engine",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResumeEngineRequest"
              }
            }
          },
          "description": "Engine Instance Info"
        },
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOperationResponse"
                }
              }
            },
            "description": "Resume a particular build",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This API resumes a build so that tasks based on this engine build will start running.",
        "tags": [
          "engine"
        ]
      }
    },
    "/engine/{EngineID}/update": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/EngineID_Path_Required"
        }
      ],
      "post": {
        "operationId": "update_engine",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineDetail"
              }
            }
          },
          "description": "Update Engine",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateEngineResponse"
                }
              }
            },
            "description": "List of engines",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This API updates the specified engine",
        "tags": [
          "engine"
        ]
      }
    },
    "/engine/{EngineInstanceID}/getwork": {
      "parameters": [
        {
          "$ref": "#/components/parameters/EngineInstanceID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "getEngineInstanceWork",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineInstanceWorkRequest"
              }
            }
          },
          "description": "Engine Instance Info",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineInstanceWorkRequestResponse"
                }
              }
            },
            "description": "Valid work response",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "Get a work request",
        "tags": [
          "engine"
        ]
      }
    },
    "/engine/{EngineInstanceID}/terminate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/EngineInstanceID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "terminate_engine_instance",
        "responses": {
          "204": {
            "content": {},
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "Delete the engine instance record",
        "tags": [
          "engine"
        ]
      }
    },
    "/engine/{EngineInstanceID}/updatestatus": {
      "parameters": [
        {
          "$ref": "#/components/parameters/EngineInstanceID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "update_engine_instance_status",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineInstanceStatus"
              }
            }
          },
          "description": "Engine Instance Status",
          "required": true
        },
        "responses": {
          "201": {
            "content": {},
            "description": "Item created",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "Update the Engine Instance Status.  Heartbeat to communicate back to controller both aggregated work and delta work from last heartbeat",
        "tags": [
          "engine"
        ]
      }
    },
    "/engines": {
      "get": {
        "operationId": "get_engines",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEnginesResponse"
                }
              }
            },
            "description": "List of engines",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "Get the list of engines deployed and available on aiWARE",
        "tags": [
          "engine"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/InternalOrganizationID_Query_Optional"
        },
        {
          "$ref": "#/components/parameters/EngineName_Query_Optional"
        },
        {
          "$ref": "#/components/parameters/EngineState_Query_Optional"
        },
        {
          "$ref": "#/components/parameters/EngineType_Query_Optional"
        },
        {
          "$ref": "#/components/parameters/EngineOutputType_Query_Optional"
        },
        {
          "$ref": "#/components/parameters/EngineCategoryID_Query_Optional"
        },
        {
          "$ref": "#/components/parameters/Limit_Query_Optional"
        },
        {
          "$ref": "#/components/parameters/Skip_Query_Optional"
        },
        {
          "$ref": "#/components/parameters/Sort_Query_Optional"
        },
        {
          "$ref": "#/components/parameters/SortOrder_Query_Optional"
        },
        {
          "$ref": "#/components/parameters/Engine_IDs_Query_Optional"
        }
      ]
    },
    "/flow/delete/{ContainerID}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContainerID"
        }
      ],
      "post": {
        "operationId": "delete_automate_container",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOperationResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Delete automate container.",
        "tags": [
          "flow"
        ]
      }
    },
    "/flow/nrcontainer/create": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "create_node_red_container_info",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNodRedContainerInfo"
              }
            }
          },
          "description": "Node-RED container info",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOperationResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "summary": "Create node-red container infomation",
        "tags": [
          "flow"
        ]
      }
    },
    "/flow/request/update/{UserID}/{Status}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/UserID"
        },
        {
          "$ref": "#/components/parameters/Status"
        }
      ],
      "post": {
        "operationId": "update_automate_request_status",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOperationResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Put this automate request into update status mode. This automate request will be updated to new status.",
        "tags": [
          "flow"
        ]
      }
    },
    "/flow/{HostID}/updatestatus": {
      "parameters": [
        {
          "$ref": "#/components/parameters/HostID"
        }
      ],
      "post": {
        "operationId": "update_automate_status",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostAction"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Get updated information to launch node-red container, terminate node-red container.",
        "tags": [
          "flow"
        ]
      }
    },
    "/host/register": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "registerHost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostRegisterRequest"
              }
            }
          },
          "description": "Engine Instance Info",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostRegisterResponse"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "summary": "Update the Host Status",
        "tags": [
          "host"
        ]
      }
    },
    "/host/{HostID}/detail": {
      "get": {
        "operationId": "get_host_detail",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostDetail"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "Get the latest info of the host",
        "tags": [
          "host"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/HostID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/host/{HostID}/drain": {
      "parameters": [
        {
          "$ref": "#/components/parameters/HostID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "drain_host",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DrainHostRequest"
              }
            }
          },
          "description": "The Request to Drain a Host",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOperationResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Put this host into drain mode.  A host in drain mode will not have work assigned to engines on the host.",
        "tags": [
          "host"
        ]
      }
    },
    "/host/{HostID}/engine/register": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/HostID"
        }
      ],
      "post": {
        "operationId": "registerEngineInstance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineInstanceInfo"
              }
            }
          },
          "description": "Engine Instance Info",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineInstanceRegistrationInfo"
                }
              }
            },
            "description": "Successful registration of Engine Instance",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "summary": "Register a new engine instance",
        "tags": [
          "host"
        ]
      }
    },
    "/host/{HostID}/launch": {
      "get": {
        "operationId": "get_hosts_launch",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHostLaunchResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This provides a list of host launches in the system",
        "tags": [
          "host"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/HostID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/host/{HostID}/pause": {
      "parameters": [
        {
          "$ref": "#/components/parameters/HostID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "pause_host",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOperationResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Pause all engines on this host.",
        "tags": [
          "host"
        ]
      }
    },
    "/host/{HostID}/resume": {
      "parameters": [
        {
          "$ref": "#/components/parameters/HostID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "resume_host",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOperationResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Resume all engines on this host.",
        "tags": [
          "host"
        ]
      }
    },
    "/host/{HostID}/status": {
      "get": {
        "operationId": "get_host_status",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostStatus"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "summary": "Get the latest status of the host",
        "tags": [
          "host"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/HostID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/host/{HostID}/terminate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/HostID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "terminateHost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminateHostRequest"
              }
            }
          },
          "description": "The request to terminate the host",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOperationResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Delete the host/agent record.  Any work still running on this host will be restarted on other hosts.",
        "tags": [
          "host"
        ]
      }
    },
    "/host/{HostID}/updatestatus": {
      "parameters": [
        {
          "$ref": "#/components/parameters/HostID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "update_host_status",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostStatus"
              }
            }
          },
          "description": "Host Status",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostAction"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "Update the Host Status",
        "tags": [
          "host"
        ]
      }
    },
    "/hosts": {
      "get": {
        "operationId": "get_hosts",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminHostsGetResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This provides a list of hosts in the system",
        "tags": [
          "host"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/proc/endpoint/{Endpoint}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/HTTPPushEndpoint_required"
        }
      ],
      "post": {
        "operationId": "pushContentToEndpoint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/octet-stream": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            },
            "audio/*": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            },
            "image/*": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            },
            "text/html": {
              "schema": {
                "type": "string"
              }
            },
            "text/plain": {
              "schema": {
                "type": "string"
              }
            },
            "text/xml": {
              "schema": {
                "type": "string"
              }
            },
            "video/*": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          },
          "description": "How to push content into a child input folder(s).",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateJobResponse"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "Whatever is posted to this endpoint will be added to the child input folder(s) for the task_routes that have this endpoint.  If more than one task_routes have this endpoint, it will be added to all child input folders.",
        "tags": [
          "process"
        ]
      }
    },
    "/proc/job/create": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "createJob",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobRequest"
              }
            }
          },
          "description": "Create Job API",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateJobResponse"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This creates a new Job",
        "tags": [
          "process"
        ]
      }
    },
    "/proc/job/{JobID}/createnext": {
      "parameters": [
        {
          "$ref": "#/components/parameters/JobID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ],
      "post": {
        "operationId": "create_next_job",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNextJobRequest"
              }
            }
          },
          "description": "Create Job Next API",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNextJobResponse"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This leverages the job template to create a new job based on the next job template in the pipeline.",
        "tags": [
          "process"
        ]
      }
    },
    "/proc/job/{JobID}/delete": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/JobID"
        }
      ],
      "post": {
        "operationId": "deleteJob",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteJobRequest"
              }
            }
          },
          "description": "Request information to delete the specified job"
        },
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOperationResponse"
                }
              }
            },
            "description": "Delete a particular job",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This API deletes the specified job",
        "tags": [
          "process"
        ]
      }
    },
    "/proc/job/{JobID}/detail": {
      "get": {
        "operationId": "get_job_detail",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobDetailResponse"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "Gets Job Detail",
        "tags": [
          "process"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/JobID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/proc/job/{JobID}/output/{JobOutputName}": {
      "get": {
        "operationId": "get_job_output",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobOutputResponse"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "Returns the contents of the job's output",
        "tags": [
          "process"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/JobID"
        },
        {
          "$ref": "#/components/parameters/JobOutputName"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/proc/job/{JobID}/outputs": {
      "get": {
        "operationId": "get_job_outputs",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobOutputsResponse"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "Returns a list of output information about this job",
        "tags": [
          "process"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/JobID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/proc/job/{JobID}/recheck_status": {
      "get": {
        "operationId": "recheckJobStatus",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecheckJobStatusResponse"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "Recheck Job Status",
        "tags": [
          "process"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/JobID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/proc/job/{JobID}/status": {
      "get": {
        "operationId": "getJobStatus",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobStatusResponse"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "Gets Job Status",
        "tags": [
          "process"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/JobID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/proc/job/{JobID}/workrequests": {
      "get": {
        "operationId": "getJobWorkRequests",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobWorkRequestResponse"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This provides a list of workrequests of a job",
        "tags": [
          "process"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/JobID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "description": "the number of records to skip before getting the result set",
          "in": "query",
          "name": "offset",
          "schema": {
            "type": "integer"
          }
        },
        {
          "description": "the number of records to return.",
          "in": "query",
          "name": "limit",
          "schema": {
            "default": 100,
            "type": "integer"
          }
        },
        {
          "description": "the field to sort. It should be in [start_date_time, completed_date_time]",
          "in": "query",
          "name": "orderBy",
          "schema": {
            "default": "start_date_time",
            "type": "string"
          }
        },
        {
          "description": "the sort order",
          "in": "query",
          "name": "direction",
          "schema": {
            "default": "DESC",
            "type": "string"
          }
        },
        {
          "description": "the value should be in [active, trial, inactive, deleted]",
          "in": "query",
          "name": "status",
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "This is an internal task ID to get work request",
          "in": "query",
          "name": "taskID",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/proc/jobs": {
      "get": {
        "operationId": "get_jobs",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobListResponse"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This gets a list of jobs",
        "tags": [
          "process"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/StartTime"
        },
        {
          "$ref": "#/components/parameters/EndTime"
        },
        {
          "description": "the number of jobs to skip before getting the result set",
          "in": "query",
          "name": "offset",
          "schema": {
            "type": "integer"
          }
        },
        {
          "description": "the number of jobs to return.",
          "in": "query",
          "name": "limit",
          "schema": {
            "default": 10,
            "type": "integer"
          }
        },
        {
          "description": "the field to sort",
          "in": "query",
          "name": "orderBy",
          "schema": {
            "default": "created_date_time",
            "type": "string"
          }
        },
        {
          "description": "the sort order",
          "in": "query",
          "name": "direction",
          "schema": {
            "default": "DESC",
            "type": "string"
          }
        }
      ]
    },
    "/proc/jobs/performance": {
      "get": {
        "operationId": "get_jobs_performance",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobsPerformanceResponse"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This gets cpu/gpu, memory state of the hosts grouped by time ranges and sorted by a range start time",
        "tags": [
          "process"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/StartTime"
        },
        {
          "$ref": "#/components/parameters/EndTime"
        },
        {
          "description": "Interval in seconds for output time ranges",
          "in": "query",
          "name": "interval",
          "schema": {
            "format": "int64",
            "type": "integer"
          }
        }
      ]
    },
    "/proc/jobs/stats": {
      "get": {
        "operationId": "get_jobs_stats",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobsStatsResponse"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This gets processing stats of the jobs",
        "tags": [
          "process"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/StartTime"
        },
        {
          "$ref": "#/components/parameters/EndTime"
        }
      ]
    },
    "/proc/jobs/stats/organization": {
      "get": {
        "operationId": "get_jobs_organization_stats",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobsOrganizationStatsResponse"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This gets processing stats of the jobs by organization",
        "tags": [
          "process"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/StartTime"
        },
        {
          "$ref": "#/components/parameters/EndTime"
        }
      ]
    },
    "/proc/jobs/stats/time_ranges": {
      "get": {
        "operationId": "get_jobs_time_ranges_stats",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobsTimeRangesStatsResponse"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This gets processing stats of the jobs grouped by time ranges and sorted by a range start time",
        "tags": [
          "process"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/StartTime"
        },
        {
          "$ref": "#/components/parameters/EndTime"
        },
        {
          "description": "Interval in seconds for output time ranges",
          "in": "query",
          "name": "interval",
          "schema": {
            "format": "int64",
            "type": "integer"
          }
        }
      ]
    },
    "/proc/task/{TaskID}/detail": {
      "get": {
        "operationId": "get_task_detail",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskDetailResponse"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "Gets Task Detail",
        "tags": [
          "process"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/TaskID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/proc/task/{TaskID}/logs": {
      "get": {
        "operationId": "getTaskLogs",
        "responses": {
          "200": {
            "content": {
              "application/zip": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "Successful operation",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "Gets logs associated with a task",
        "tags": [
          "process"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/TaskID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/proc/task/{TaskID}/output/{TaskOutputName}": {
      "get": {
        "operationId": "get_task_output",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskOutputResponse"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "Returns the contents of the task's output",
        "tags": [
          "process"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/TaskID"
        },
        {
          "$ref": "#/components/parameters/TaskOutputName"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/proc/task/{TaskID}/outputs": {
      "get": {
        "operationId": "get_task_outputs",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskOutputsResponse"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "Gets Task Output",
        "tags": [
          "process"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/TaskID"
        },
        {
          "$ref": "#/components/parameters/CorrelationID"
        }
      ]
    },
    "/proc/tasks": {
      "get": {
        "operationId": "get_tasks",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTasksResponse"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This gets a list of tasks based on the provided criteria",
        "tags": [
          "process"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/StartTime"
        },
        {
          "$ref": "#/components/parameters/EndTime"
        },
        {
          "description": "the number of jobs to skip before getting the result set",
          "in": "query",
          "name": "offset",
          "schema": {
            "format": "int64",
            "type": "integer"
          }
        },
        {
          "description": "the number of jobs to return.",
          "in": "query",
          "name": "limit",
          "schema": {
            "default": 10,
            "format": "int64",
            "type": "integer"
          }
        },
        {
          "description": "the field to sort",
          "in": "query",
          "name": "orderBy",
          "schema": {
            "default": "created_date_time",
            "type": "string"
          }
        },
        {
          "description": "the sort order",
          "in": "query",
          "name": "direction",
          "schema": {
            "default": "DESC",
            "type": "string"
          }
        },
        {
          "$ref": "#/components/parameters/JobStatus"
        },
        {
          "description": "Filter by  organization id",
          "in": "query",
          "name": "organizationID",
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Filter by  job id",
          "in": "query",
          "name": "jobID",
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Filter by  engine id",
          "in": "query",
          "name": "engineID",
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Filter by media source id",
          "in": "query",
          "name": "mediaSourceID",
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Filter tasks by the recording id",
          "in": "query",
          "name": "recordingID",
          "schema": {
            "format": "int64",
            "type": "integer"
          }
        },
        {
          "description": "Filter by tasks modified before expressed as timestamp",
          "in": "query",
          "name": "modifiedBefore",
          "schema": {
            "format": "int64",
            "type": "integer"
          }
        },
        {
          "description": "Filter by tasks modified after expressed as timestamp",
          "in": "query",
          "name": "modifiedAfter",
          "schema": {
            "format": "int64",
            "type": "integer"
          }
        }
      ]
    },
    "/proc/tasks/stats": {
      "get": {
        "operationId": "getTasksStats",
        "parameters": [
          {
            "$ref": "#/components/parameters/CorrelationID"
          },
          {
            "$ref": "#/components/parameters/StartTime"
          },
          {
            "$ref": "#/components/parameters/EndTime"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTasksStatsResponse"
                }
              }
            },
            "description": "This provides the output for the tasks stats call.  Rows that do not have data will be omitted.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This gets processing stats of the tasks",
        "tags": [
          "process"
        ]
      }
    },
    "/proc/tasks/stats/engines": {
      "get": {
        "operationId": "get_tasks_stats_engines",
        "parameters": [
          {
            "$ref": "#/components/parameters/CorrelationID"
          },
          {
            "$ref": "#/components/parameters/StartTime"
          },
          {
            "$ref": "#/components/parameters/EndTime"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTasksEnginesStatsResponse"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This gets processing stats of the tasks grouped by engine categories",
        "tags": [
          "process"
        ]
      }
    },
    "/proc/tasks/stats/hosts": {
      "get": {
        "operationId": "get_tasks_stats_hosts",
        "parameters": [
          {
            "$ref": "#/components/parameters/CorrelationID"
          },
          {
            "$ref": "#/components/parameters/StartTime"
          },
          {
            "$ref": "#/components/parameters/EndTime"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTasksHostsStatsResponse"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This gets processing stats of the tasks grouped by hosts",
        "tags": [
          "process"
        ]
      }
    },
    "/proc/tasks/stats/time_ranges": {
      "get": {
        "operationId": "get_tasks_stats_time_ranges",
        "parameters": [
          {
            "$ref": "#/components/parameters/CorrelationID"
          },
          {
            "$ref": "#/components/parameters/StartTime"
          },
          {
            "$ref": "#/components/parameters/EndTime"
          },
          {
            "description": "Interval in seconds for output time ranges",
            "in": "query",
            "name": "interval",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTasksTimeRangesStatsResponse"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This gets processing stats of the tasks grouped by time ranges and sorted by a range start time",
        "tags": [
          "process"
        ]
      }
    },
    "/proc/template/{TemplateID}/launch": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CorrelationID"
        },
        {
          "$ref": "#/components/parameters/JobTemplateID"
        }
      ],
      "post": {
        "operationId": "launch_job_template",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LaunchJobTemplateRequest"
              }
            }
          },
          "description": "Launch Job Template API",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaunchJobTemplateResponse"
                }
              }
            },
            "description": "Valid status request",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid argument.  Please see the error response for more information.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not authorized",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The request is not allowed.",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Implemented",
            "headers": {
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "System Unavailable",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Aiware-Version": {
                "$ref": "#/components/headers/AiwareVersion"
              },
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "summary": "This launch a job based on the given job template",
        "tags": [
          "process"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://api.aiware.com/edge/v1"
    }
  ],
  "tags": [
    {
      "description": "APIs related to Engines",
      "name": "engine"
    },
    {
      "description": "APIs related to Hosts",
      "name": "host"
    },
    {
      "description": "APIs related to the administration of aiWARE Edge",
      "name": "admin"
    },
    {
      "description": "APIs related to processing and DAGs on aiWARE Edge",
      "name": "process"
    }
  ]
}